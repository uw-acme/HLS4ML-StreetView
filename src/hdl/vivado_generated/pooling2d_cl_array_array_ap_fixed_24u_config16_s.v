// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pooling2d_cl_array_array_ap_fixed_24u_config16_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        data_V_data_4_V_dout,
        data_V_data_4_V_empty_n,
        data_V_data_4_V_read,
        data_V_data_5_V_dout,
        data_V_data_5_V_empty_n,
        data_V_data_5_V_read,
        data_V_data_6_V_dout,
        data_V_data_6_V_empty_n,
        data_V_data_6_V_read,
        data_V_data_7_V_dout,
        data_V_data_7_V_empty_n,
        data_V_data_7_V_read,
        data_V_data_8_V_dout,
        data_V_data_8_V_empty_n,
        data_V_data_8_V_read,
        data_V_data_9_V_dout,
        data_V_data_9_V_empty_n,
        data_V_data_9_V_read,
        data_V_data_10_V_dout,
        data_V_data_10_V_empty_n,
        data_V_data_10_V_read,
        data_V_data_11_V_dout,
        data_V_data_11_V_empty_n,
        data_V_data_11_V_read,
        data_V_data_12_V_dout,
        data_V_data_12_V_empty_n,
        data_V_data_12_V_read,
        data_V_data_13_V_dout,
        data_V_data_13_V_empty_n,
        data_V_data_13_V_read,
        data_V_data_14_V_dout,
        data_V_data_14_V_empty_n,
        data_V_data_14_V_read,
        data_V_data_15_V_dout,
        data_V_data_15_V_empty_n,
        data_V_data_15_V_read,
        data_V_data_16_V_dout,
        data_V_data_16_V_empty_n,
        data_V_data_16_V_read,
        data_V_data_17_V_dout,
        data_V_data_17_V_empty_n,
        data_V_data_17_V_read,
        data_V_data_18_V_dout,
        data_V_data_18_V_empty_n,
        data_V_data_18_V_read,
        data_V_data_19_V_dout,
        data_V_data_19_V_empty_n,
        data_V_data_19_V_read,
        data_V_data_20_V_dout,
        data_V_data_20_V_empty_n,
        data_V_data_20_V_read,
        data_V_data_21_V_dout,
        data_V_data_21_V_empty_n,
        data_V_data_21_V_read,
        data_V_data_22_V_dout,
        data_V_data_22_V_empty_n,
        data_V_data_22_V_read,
        data_V_data_23_V_dout,
        data_V_data_23_V_empty_n,
        data_V_data_23_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write,
        res_V_data_6_V_din,
        res_V_data_6_V_full_n,
        res_V_data_6_V_write,
        res_V_data_7_V_din,
        res_V_data_7_V_full_n,
        res_V_data_7_V_write,
        res_V_data_8_V_din,
        res_V_data_8_V_full_n,
        res_V_data_8_V_write,
        res_V_data_9_V_din,
        res_V_data_9_V_full_n,
        res_V_data_9_V_write,
        res_V_data_10_V_din,
        res_V_data_10_V_full_n,
        res_V_data_10_V_write,
        res_V_data_11_V_din,
        res_V_data_11_V_full_n,
        res_V_data_11_V_write,
        res_V_data_12_V_din,
        res_V_data_12_V_full_n,
        res_V_data_12_V_write,
        res_V_data_13_V_din,
        res_V_data_13_V_full_n,
        res_V_data_13_V_write,
        res_V_data_14_V_din,
        res_V_data_14_V_full_n,
        res_V_data_14_V_write,
        res_V_data_15_V_din,
        res_V_data_15_V_full_n,
        res_V_data_15_V_write,
        res_V_data_16_V_din,
        res_V_data_16_V_full_n,
        res_V_data_16_V_write,
        res_V_data_17_V_din,
        res_V_data_17_V_full_n,
        res_V_data_17_V_write,
        res_V_data_18_V_din,
        res_V_data_18_V_full_n,
        res_V_data_18_V_write,
        res_V_data_19_V_din,
        res_V_data_19_V_full_n,
        res_V_data_19_V_write,
        res_V_data_20_V_din,
        res_V_data_20_V_full_n,
        res_V_data_20_V_write,
        res_V_data_21_V_din,
        res_V_data_21_V_full_n,
        res_V_data_21_V_write,
        res_V_data_22_V_din,
        res_V_data_22_V_full_n,
        res_V_data_22_V_write,
        res_V_data_23_V_din,
        res_V_data_23_V_full_n,
        res_V_data_23_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state6 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [15:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [15:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [15:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
input  [15:0] data_V_data_4_V_dout;
input   data_V_data_4_V_empty_n;
output   data_V_data_4_V_read;
input  [15:0] data_V_data_5_V_dout;
input   data_V_data_5_V_empty_n;
output   data_V_data_5_V_read;
input  [15:0] data_V_data_6_V_dout;
input   data_V_data_6_V_empty_n;
output   data_V_data_6_V_read;
input  [15:0] data_V_data_7_V_dout;
input   data_V_data_7_V_empty_n;
output   data_V_data_7_V_read;
input  [15:0] data_V_data_8_V_dout;
input   data_V_data_8_V_empty_n;
output   data_V_data_8_V_read;
input  [15:0] data_V_data_9_V_dout;
input   data_V_data_9_V_empty_n;
output   data_V_data_9_V_read;
input  [15:0] data_V_data_10_V_dout;
input   data_V_data_10_V_empty_n;
output   data_V_data_10_V_read;
input  [15:0] data_V_data_11_V_dout;
input   data_V_data_11_V_empty_n;
output   data_V_data_11_V_read;
input  [15:0] data_V_data_12_V_dout;
input   data_V_data_12_V_empty_n;
output   data_V_data_12_V_read;
input  [15:0] data_V_data_13_V_dout;
input   data_V_data_13_V_empty_n;
output   data_V_data_13_V_read;
input  [15:0] data_V_data_14_V_dout;
input   data_V_data_14_V_empty_n;
output   data_V_data_14_V_read;
input  [15:0] data_V_data_15_V_dout;
input   data_V_data_15_V_empty_n;
output   data_V_data_15_V_read;
input  [15:0] data_V_data_16_V_dout;
input   data_V_data_16_V_empty_n;
output   data_V_data_16_V_read;
input  [15:0] data_V_data_17_V_dout;
input   data_V_data_17_V_empty_n;
output   data_V_data_17_V_read;
input  [15:0] data_V_data_18_V_dout;
input   data_V_data_18_V_empty_n;
output   data_V_data_18_V_read;
input  [15:0] data_V_data_19_V_dout;
input   data_V_data_19_V_empty_n;
output   data_V_data_19_V_read;
input  [15:0] data_V_data_20_V_dout;
input   data_V_data_20_V_empty_n;
output   data_V_data_20_V_read;
input  [15:0] data_V_data_21_V_dout;
input   data_V_data_21_V_empty_n;
output   data_V_data_21_V_read;
input  [15:0] data_V_data_22_V_dout;
input   data_V_data_22_V_empty_n;
output   data_V_data_22_V_read;
input  [15:0] data_V_data_23_V_dout;
input   data_V_data_23_V_empty_n;
output   data_V_data_23_V_read;
output  [15:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [15:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [15:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [15:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [15:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [15:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;
output  [15:0] res_V_data_6_V_din;
input   res_V_data_6_V_full_n;
output   res_V_data_6_V_write;
output  [15:0] res_V_data_7_V_din;
input   res_V_data_7_V_full_n;
output   res_V_data_7_V_write;
output  [15:0] res_V_data_8_V_din;
input   res_V_data_8_V_full_n;
output   res_V_data_8_V_write;
output  [15:0] res_V_data_9_V_din;
input   res_V_data_9_V_full_n;
output   res_V_data_9_V_write;
output  [15:0] res_V_data_10_V_din;
input   res_V_data_10_V_full_n;
output   res_V_data_10_V_write;
output  [15:0] res_V_data_11_V_din;
input   res_V_data_11_V_full_n;
output   res_V_data_11_V_write;
output  [15:0] res_V_data_12_V_din;
input   res_V_data_12_V_full_n;
output   res_V_data_12_V_write;
output  [15:0] res_V_data_13_V_din;
input   res_V_data_13_V_full_n;
output   res_V_data_13_V_write;
output  [15:0] res_V_data_14_V_din;
input   res_V_data_14_V_full_n;
output   res_V_data_14_V_write;
output  [15:0] res_V_data_15_V_din;
input   res_V_data_15_V_full_n;
output   res_V_data_15_V_write;
output  [15:0] res_V_data_16_V_din;
input   res_V_data_16_V_full_n;
output   res_V_data_16_V_write;
output  [15:0] res_V_data_17_V_din;
input   res_V_data_17_V_full_n;
output   res_V_data_17_V_write;
output  [15:0] res_V_data_18_V_din;
input   res_V_data_18_V_full_n;
output   res_V_data_18_V_write;
output  [15:0] res_V_data_19_V_din;
input   res_V_data_19_V_full_n;
output   res_V_data_19_V_write;
output  [15:0] res_V_data_20_V_din;
input   res_V_data_20_V_full_n;
output   res_V_data_20_V_write;
output  [15:0] res_V_data_21_V_din;
input   res_V_data_21_V_full_n;
output   res_V_data_21_V_write;
output  [15:0] res_V_data_22_V_din;
input   res_V_data_22_V_full_n;
output   res_V_data_22_V_write;
output  [15:0] res_V_data_23_V_din;
input   res_V_data_23_V_full_n;
output   res_V_data_23_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg data_V_data_4_V_read;
reg data_V_data_5_V_read;
reg data_V_data_6_V_read;
reg data_V_data_7_V_read;
reg data_V_data_8_V_read;
reg data_V_data_9_V_read;
reg data_V_data_10_V_read;
reg data_V_data_11_V_read;
reg data_V_data_12_V_read;
reg data_V_data_13_V_read;
reg data_V_data_14_V_read;
reg data_V_data_15_V_read;
reg data_V_data_16_V_read;
reg data_V_data_17_V_read;
reg data_V_data_18_V_read;
reg data_V_data_19_V_read;
reg data_V_data_20_V_read;
reg data_V_data_21_V_read;
reg data_V_data_22_V_read;
reg data_V_data_23_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;
reg res_V_data_6_V_write;
reg res_V_data_7_V_write;
reg res_V_data_8_V_write;
reg res_V_data_9_V_write;
reg res_V_data_10_V_write;
reg res_V_data_11_V_write;
reg res_V_data_12_V_write;
reg res_V_data_13_V_write;
reg res_V_data_14_V_write;
reg res_V_data_15_V_write;
reg res_V_data_16_V_write;
reg res_V_data_17_V_write;
reg res_V_data_18_V_write;
reg res_V_data_19_V_write;
reg res_V_data_20_V_write;
reg res_V_data_21_V_write;
reg res_V_data_22_V_write;
reg res_V_data_23_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] pX;
reg   [31:0] sX;
reg   [31:0] pY;
reg   [31:0] sY;
reg   [15:0] kernel_data_V_5_24;
reg   [15:0] kernel_data_V_5_25;
reg   [15:0] kernel_data_V_5_26;
reg   [15:0] kernel_data_V_5_27;
reg   [15:0] kernel_data_V_5_28;
reg   [15:0] kernel_data_V_5_29;
reg   [15:0] kernel_data_V_5_30;
reg   [15:0] kernel_data_V_5_31;
reg   [15:0] kernel_data_V_5_32;
reg   [15:0] kernel_data_V_5_33;
reg   [15:0] kernel_data_V_5_34;
reg   [15:0] kernel_data_V_5_35;
reg   [15:0] kernel_data_V_5_36;
reg   [15:0] kernel_data_V_5_37;
reg   [15:0] kernel_data_V_5_38;
reg   [15:0] kernel_data_V_5_39;
reg   [15:0] kernel_data_V_5_40;
reg   [15:0] kernel_data_V_5_41;
reg   [15:0] kernel_data_V_5_42;
reg   [15:0] kernel_data_V_5_43;
reg   [15:0] kernel_data_V_5_44;
reg   [15:0] kernel_data_V_5_45;
reg   [15:0] kernel_data_V_5_46;
reg   [15:0] kernel_data_V_5_47;
reg   [15:0] kernel_data_V_5_72;
reg   [15:0] kernel_data_V_5_73;
reg   [15:0] kernel_data_V_5_74;
reg   [15:0] kernel_data_V_5_75;
reg   [15:0] kernel_data_V_5_76;
reg   [15:0] kernel_data_V_5_77;
reg   [15:0] kernel_data_V_5_78;
reg   [15:0] kernel_data_V_5_79;
reg   [15:0] kernel_data_V_5_80;
reg   [15:0] kernel_data_V_5_81;
reg   [15:0] kernel_data_V_5_82;
reg   [15:0] kernel_data_V_5_83;
reg   [15:0] kernel_data_V_5_84;
reg   [15:0] kernel_data_V_5_85;
reg   [15:0] kernel_data_V_5_86;
reg   [15:0] kernel_data_V_5_87;
reg   [15:0] kernel_data_V_5_88;
reg   [15:0] kernel_data_V_5_89;
reg   [15:0] kernel_data_V_5_90;
reg   [15:0] kernel_data_V_5_91;
reg   [15:0] kernel_data_V_5_92;
reg   [15:0] kernel_data_V_5_93;
reg   [15:0] kernel_data_V_5_94;
reg   [15:0] kernel_data_V_5_95;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln233_reg_2606;
reg    data_V_data_1_V_blk_n;
reg    data_V_data_2_V_blk_n;
reg    data_V_data_3_V_blk_n;
reg    data_V_data_4_V_blk_n;
reg    data_V_data_5_V_blk_n;
reg    data_V_data_6_V_blk_n;
reg    data_V_data_7_V_blk_n;
reg    data_V_data_8_V_blk_n;
reg    data_V_data_9_V_blk_n;
reg    data_V_data_10_V_blk_n;
reg    data_V_data_11_V_blk_n;
reg    data_V_data_12_V_blk_n;
reg    data_V_data_13_V_blk_n;
reg    data_V_data_14_V_blk_n;
reg    data_V_data_15_V_blk_n;
reg    data_V_data_16_V_blk_n;
reg    data_V_data_17_V_blk_n;
reg    data_V_data_18_V_blk_n;
reg    data_V_data_19_V_blk_n;
reg    data_V_data_20_V_blk_n;
reg    data_V_data_21_V_blk_n;
reg    data_V_data_22_V_blk_n;
reg    data_V_data_23_V_blk_n;
reg    res_V_data_0_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] and_ln185_2_reg_2615;
reg   [0:0] and_ln185_2_reg_2615_pp0_iter2_reg;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg    res_V_data_4_V_blk_n;
reg    res_V_data_5_V_blk_n;
reg    res_V_data_6_V_blk_n;
reg    res_V_data_7_V_blk_n;
reg    res_V_data_8_V_blk_n;
reg    res_V_data_9_V_blk_n;
reg    res_V_data_10_V_blk_n;
reg    res_V_data_11_V_blk_n;
reg    res_V_data_12_V_blk_n;
reg    res_V_data_13_V_blk_n;
reg    res_V_data_14_V_blk_n;
reg    res_V_data_15_V_blk_n;
reg    res_V_data_16_V_blk_n;
reg    res_V_data_17_V_blk_n;
reg    res_V_data_18_V_blk_n;
reg    res_V_data_19_V_blk_n;
reg    res_V_data_20_V_blk_n;
reg    res_V_data_21_V_blk_n;
reg    res_V_data_22_V_blk_n;
reg    res_V_data_23_V_blk_n;
reg   [4:0] indvar_flatten_reg_1000;
wire   [0:0] icmp_ln233_fu_1338_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    io_acc_block_signal_op94;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    io_acc_block_signal_op343;
reg    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln233_reg_2606_pp0_iter1_reg;
wire   [4:0] add_ln233_fu_1344_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] and_ln185_2_fu_1402_p2;
reg   [0:0] and_ln185_2_reg_2615_pp0_iter1_reg;
wire   [0:0] icmp_ln203_fu_1408_p2;
reg   [0:0] icmp_ln203_reg_2619;
wire   [0:0] icmp_ln207_fu_1458_p2;
wire   [31:0] select_ln213_fu_1482_p3;
reg   [15:0] tmp_data_0_V_reg_2632;
reg   [15:0] tmp_data_1_V_reg_2637;
reg   [15:0] tmp_data_2_V_reg_2642;
reg   [15:0] tmp_data_3_V_reg_2647;
reg   [15:0] tmp_data_4_V_reg_2652;
reg   [15:0] tmp_data_5_V_reg_2657;
reg   [15:0] tmp_data_6_V_reg_2662;
reg   [15:0] tmp_data_7_V_reg_2667;
reg   [15:0] tmp_data_8_V_reg_2672;
reg   [15:0] tmp_data_9_V_reg_2677;
reg   [15:0] tmp_data_10_V_reg_2682;
reg   [15:0] tmp_data_11_V_reg_2687;
reg   [15:0] tmp_data_12_V_reg_2692;
reg   [15:0] tmp_data_13_V_reg_2697;
reg   [15:0] tmp_data_14_V_reg_2702;
reg   [15:0] tmp_data_15_V_reg_2707;
reg   [15:0] tmp_data_16_V_reg_2712;
reg   [15:0] tmp_data_17_V_reg_2717;
reg   [15:0] tmp_data_18_V_reg_2722;
reg   [15:0] tmp_data_19_V_reg_2727;
reg   [15:0] tmp_data_20_V_reg_2732;
reg   [15:0] tmp_data_21_V_reg_2737;
reg   [15:0] tmp_data_22_V_reg_2742;
reg   [15:0] tmp_data_23_V_reg_2747;
wire   [15:0] tmp_data_0_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1022_ap_return;
reg   [15:0] tmp_data_0_V_1_reg_2752;
wire   [15:0] tmp_data_1_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1030_ap_return;
reg   [15:0] tmp_data_1_V_1_reg_2757;
wire   [15:0] tmp_data_2_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1038_ap_return;
reg   [15:0] tmp_data_2_V_1_reg_2762;
wire   [15:0] tmp_data_3_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1046_ap_return;
reg   [15:0] tmp_data_3_V_1_reg_2767;
wire   [15:0] tmp_data_4_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1054_ap_return;
reg   [15:0] tmp_data_4_V_1_reg_2772;
wire   [15:0] tmp_data_5_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1062_ap_return;
reg   [15:0] tmp_data_5_V_1_reg_2777;
wire   [15:0] tmp_data_6_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1070_ap_return;
reg   [15:0] tmp_data_6_V_1_reg_2782;
wire   [15:0] tmp_data_7_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1078_ap_return;
reg   [15:0] tmp_data_7_V_1_reg_2787;
wire   [15:0] tmp_data_8_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1086_ap_return;
reg   [15:0] tmp_data_8_V_1_reg_2792;
wire   [15:0] tmp_data_9_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1094_ap_return;
reg   [15:0] tmp_data_9_V_1_reg_2797;
wire   [15:0] tmp_data_10_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1102_ap_return;
reg   [15:0] tmp_data_10_V_1_reg_2802;
wire   [15:0] tmp_data_11_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1110_ap_return;
reg   [15:0] tmp_data_11_V_1_reg_2807;
wire   [15:0] tmp_data_12_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1118_ap_return;
reg   [15:0] tmp_data_12_V_1_reg_2812;
wire   [15:0] tmp_data_13_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1126_ap_return;
reg   [15:0] tmp_data_13_V_1_reg_2817;
wire   [15:0] tmp_data_14_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1134_ap_return;
reg   [15:0] tmp_data_14_V_1_reg_2822;
wire   [15:0] tmp_data_15_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1142_ap_return;
reg   [15:0] tmp_data_15_V_1_reg_2827;
wire   [15:0] tmp_data_16_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1150_ap_return;
reg   [15:0] tmp_data_16_V_1_reg_2832;
wire   [15:0] tmp_data_17_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1158_ap_return;
reg   [15:0] tmp_data_17_V_1_reg_2837;
wire   [15:0] tmp_data_18_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1166_ap_return;
reg   [15:0] tmp_data_18_V_1_reg_2842;
wire   [15:0] tmp_data_19_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1174_ap_return;
reg   [15:0] tmp_data_19_V_1_reg_2847;
wire   [15:0] tmp_data_20_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1182_ap_return;
reg   [15:0] tmp_data_20_V_1_reg_2852;
wire   [15:0] tmp_data_21_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1190_ap_return;
reg   [15:0] tmp_data_21_V_1_reg_2857;
wire   [15:0] tmp_data_22_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1198_ap_return;
reg   [15:0] tmp_data_22_V_1_reg_2862;
wire   [15:0] tmp_data_23_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1206_ap_return;
reg   [15:0] tmp_data_23_V_1_reg_2867;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire    tmp_data_0_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1022_ap_ready;
wire    tmp_data_1_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1030_ap_ready;
wire    tmp_data_2_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1038_ap_ready;
wire    tmp_data_3_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1046_ap_ready;
wire    tmp_data_4_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1054_ap_ready;
wire    tmp_data_5_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1062_ap_ready;
wire    tmp_data_6_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1070_ap_ready;
wire    tmp_data_7_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1078_ap_ready;
wire    tmp_data_8_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1086_ap_ready;
wire    tmp_data_9_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1094_ap_ready;
wire    tmp_data_10_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1102_ap_ready;
wire    tmp_data_11_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1110_ap_ready;
wire    tmp_data_12_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1118_ap_ready;
wire    tmp_data_13_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1126_ap_ready;
wire    tmp_data_14_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1134_ap_ready;
wire    tmp_data_15_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1142_ap_ready;
wire    tmp_data_16_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1150_ap_ready;
wire    tmp_data_17_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1158_ap_ready;
wire    tmp_data_18_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1166_ap_ready;
wire    tmp_data_19_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1174_ap_ready;
wire    tmp_data_20_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1182_ap_ready;
wire    tmp_data_21_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1190_ap_ready;
wire    tmp_data_22_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1198_ap_ready;
wire    tmp_data_23_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1206_ap_ready;
wire    call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_start;
wire    call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_done;
wire    call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_idle;
wire    call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_ready;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_0;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_1;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_2;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_3;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_4;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_5;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_6;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_7;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_8;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_9;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_10;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_11;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_12;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_13;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_14;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_15;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_16;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_17;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_18;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_19;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_20;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_21;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_22;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_23;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_24;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_25;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_26;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_27;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_28;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_29;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_30;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_31;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_32;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_33;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_34;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_35;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_36;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_37;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_38;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_39;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_40;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_41;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_42;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_43;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_44;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_45;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_46;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_47;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_48;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_49;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_50;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_51;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_52;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_53;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_54;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_55;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_56;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_57;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_58;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_59;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_60;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_61;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_62;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_63;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_64;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_65;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_66;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_67;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_68;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_69;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_70;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_71;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_72;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_73;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_74;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_75;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_76;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_77;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_78;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_79;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_80;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_81;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_82;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_83;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_84;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_85;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_86;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_87;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_88;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_89;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_90;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_91;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_92;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_93;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_94;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_95;
reg    call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_ce;
wire    ap_block_state2_pp0_stage0_iter0_ignore_call78;
reg    ap_block_state3_pp0_stage0_iter1_ignore_call78;
wire    ap_block_state4_pp0_stage0_iter2_ignore_call78;
reg    ap_block_state5_pp0_stage0_iter3_ignore_call78;
reg    ap_block_pp0_stage0_11001_ignoreCallOp174;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_i_i_reg_1011;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_i_i_reg_1011;
reg    call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_start_reg;
wire   [31:0] add_ln216_fu_1414_p2;
wire   [31:0] select_ln218_fu_1432_p3;
wire   [31:0] add_ln211_fu_1464_p2;
reg   [31:0] ap_sig_allocacmp_sY_load;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln185_fu_1354_p2;
wire   [0:0] icmp_ln185_1_fu_1364_p2;
wire   [0:0] icmp_ln185_2_fu_1374_p2;
wire   [0:0] icmp_ln185_3_fu_1384_p2;
wire   [0:0] and_ln185_1_fu_1396_p2;
wire   [0:0] and_ln185_fu_1390_p2;
wire   [31:0] add_ln218_fu_1426_p2;
wire   [31:0] add_ln213_fu_1476_p2;
wire    ap_CS_fsm_state6;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_411;
reg    ap_condition_866;
reg    ap_condition_389;
reg    ap_condition_859;
reg    ap_condition_1023;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 pX = 32'd0;
#0 sX = 32'd0;
#0 pY = 32'd0;
#0 sY = 32'd0;
#0 kernel_data_V_5_24 = 16'd0;
#0 kernel_data_V_5_25 = 16'd0;
#0 kernel_data_V_5_26 = 16'd0;
#0 kernel_data_V_5_27 = 16'd0;
#0 kernel_data_V_5_28 = 16'd0;
#0 kernel_data_V_5_29 = 16'd0;
#0 kernel_data_V_5_30 = 16'd0;
#0 kernel_data_V_5_31 = 16'd0;
#0 kernel_data_V_5_32 = 16'd0;
#0 kernel_data_V_5_33 = 16'd0;
#0 kernel_data_V_5_34 = 16'd0;
#0 kernel_data_V_5_35 = 16'd0;
#0 kernel_data_V_5_36 = 16'd0;
#0 kernel_data_V_5_37 = 16'd0;
#0 kernel_data_V_5_38 = 16'd0;
#0 kernel_data_V_5_39 = 16'd0;
#0 kernel_data_V_5_40 = 16'd0;
#0 kernel_data_V_5_41 = 16'd0;
#0 kernel_data_V_5_42 = 16'd0;
#0 kernel_data_V_5_43 = 16'd0;
#0 kernel_data_V_5_44 = 16'd0;
#0 kernel_data_V_5_45 = 16'd0;
#0 kernel_data_V_5_46 = 16'd0;
#0 kernel_data_V_5_47 = 16'd0;
#0 kernel_data_V_5_72 = 16'd0;
#0 kernel_data_V_5_73 = 16'd0;
#0 kernel_data_V_5_74 = 16'd0;
#0 kernel_data_V_5_75 = 16'd0;
#0 kernel_data_V_5_76 = 16'd0;
#0 kernel_data_V_5_77 = 16'd0;
#0 kernel_data_V_5_78 = 16'd0;
#0 kernel_data_V_5_79 = 16'd0;
#0 kernel_data_V_5_80 = 16'd0;
#0 kernel_data_V_5_81 = 16'd0;
#0 kernel_data_V_5_82 = 16'd0;
#0 kernel_data_V_5_83 = 16'd0;
#0 kernel_data_V_5_84 = 16'd0;
#0 kernel_data_V_5_85 = 16'd0;
#0 kernel_data_V_5_86 = 16'd0;
#0 kernel_data_V_5_87 = 16'd0;
#0 kernel_data_V_5_88 = 16'd0;
#0 kernel_data_V_5_89 = 16'd0;
#0 kernel_data_V_5_90 = 16'd0;
#0 kernel_data_V_5_91 = 16'd0;
#0 kernel_data_V_5_92 = 16'd0;
#0 kernel_data_V_5_93 = 16'd0;
#0 kernel_data_V_5_94 = 16'd0;
#0 kernel_data_V_5_95 = 16'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_start_reg = 1'b0;
end

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_0_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1022(
    .ap_ready(tmp_data_0_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1022_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_0),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_48),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_24),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_72),
    .ap_return(tmp_data_0_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1022_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_1_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1030(
    .ap_ready(tmp_data_1_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1030_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_1),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_49),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_25),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_73),
    .ap_return(tmp_data_1_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1030_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_2_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1038(
    .ap_ready(tmp_data_2_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1038_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_2),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_50),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_26),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_74),
    .ap_return(tmp_data_2_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1038_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_3_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1046(
    .ap_ready(tmp_data_3_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1046_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_3),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_51),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_27),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_75),
    .ap_return(tmp_data_3_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1046_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_4_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1054(
    .ap_ready(tmp_data_4_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1054_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_4),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_52),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_28),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_76),
    .ap_return(tmp_data_4_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1054_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_5_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1062(
    .ap_ready(tmp_data_5_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1062_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_5),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_53),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_29),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_77),
    .ap_return(tmp_data_5_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1062_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_6_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1070(
    .ap_ready(tmp_data_6_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1070_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_6),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_54),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_30),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_78),
    .ap_return(tmp_data_6_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1070_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_7_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1078(
    .ap_ready(tmp_data_7_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1078_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_7),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_55),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_31),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_79),
    .ap_return(tmp_data_7_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1078_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_8_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1086(
    .ap_ready(tmp_data_8_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1086_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_8),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_56),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_32),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_80),
    .ap_return(tmp_data_8_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1086_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_9_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1094(
    .ap_ready(tmp_data_9_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1094_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_9),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_57),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_33),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_81),
    .ap_return(tmp_data_9_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1094_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_10_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1102(
    .ap_ready(tmp_data_10_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1102_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_10),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_58),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_34),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_82),
    .ap_return(tmp_data_10_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1102_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_11_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1110(
    .ap_ready(tmp_data_11_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1110_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_11),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_59),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_35),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_83),
    .ap_return(tmp_data_11_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1110_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_12_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1118(
    .ap_ready(tmp_data_12_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1118_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_12),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_60),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_36),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_84),
    .ap_return(tmp_data_12_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1118_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_13_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1126(
    .ap_ready(tmp_data_13_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1126_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_13),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_61),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_37),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_85),
    .ap_return(tmp_data_13_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1126_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_14_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1134(
    .ap_ready(tmp_data_14_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1134_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_14),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_62),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_38),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_86),
    .ap_return(tmp_data_14_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1134_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_15_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1142(
    .ap_ready(tmp_data_15_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1142_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_15),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_63),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_39),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_87),
    .ap_return(tmp_data_15_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1142_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_16_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1150(
    .ap_ready(tmp_data_16_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1150_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_16),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_64),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_40),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_88),
    .ap_return(tmp_data_16_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1150_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_17_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1158(
    .ap_ready(tmp_data_17_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1158_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_17),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_65),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_41),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_89),
    .ap_return(tmp_data_17_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1158_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_18_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1166(
    .ap_ready(tmp_data_18_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1166_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_18),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_66),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_42),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_90),
    .ap_return(tmp_data_18_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1166_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_19_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1174(
    .ap_ready(tmp_data_19_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1174_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_19),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_67),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_43),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_91),
    .ap_return(tmp_data_19_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1174_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_20_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1182(
    .ap_ready(tmp_data_20_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1182_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_20),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_68),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_44),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_92),
    .ap_return(tmp_data_20_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1182_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_21_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1190(
    .ap_ready(tmp_data_21_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1190_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_21),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_69),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_45),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_93),
    .ap_return(tmp_data_21_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1190_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_22_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1198(
    .ap_ready(tmp_data_22_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1198_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_22),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_70),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_46),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_94),
    .ap_return(tmp_data_22_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1198_ap_return)
);

reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s tmp_data_23_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1206(
    .ap_ready(tmp_data_23_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1206_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_23),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_71),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_47),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_95),
    .ap_return(tmp_data_23_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1206_ap_return)
);

shift_line_buffer_array_ap_fixed_24u_config16_s call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_start),
    .ap_done(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_done),
    .ap_idle(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_idle),
    .ap_ready(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_ready),
    .in_elem_data_0_V_read(tmp_data_0_V_reg_2632),
    .in_elem_data_1_V_read(tmp_data_1_V_reg_2637),
    .in_elem_data_2_V_read(tmp_data_2_V_reg_2642),
    .in_elem_data_3_V_read(tmp_data_3_V_reg_2647),
    .in_elem_data_4_V_read(tmp_data_4_V_reg_2652),
    .in_elem_data_5_V_read(tmp_data_5_V_reg_2657),
    .in_elem_data_6_V_read(tmp_data_6_V_reg_2662),
    .in_elem_data_7_V_read(tmp_data_7_V_reg_2667),
    .in_elem_data_8_V_read(tmp_data_8_V_reg_2672),
    .in_elem_data_9_V_read(tmp_data_9_V_reg_2677),
    .in_elem_data_10_V_read(tmp_data_10_V_reg_2682),
    .in_elem_data_11_V_read(tmp_data_11_V_reg_2687),
    .in_elem_data_12_V_read(tmp_data_12_V_reg_2692),
    .in_elem_data_13_V_read(tmp_data_13_V_reg_2697),
    .in_elem_data_14_V_read(tmp_data_14_V_reg_2702),
    .in_elem_data_15_V_read(tmp_data_15_V_reg_2707),
    .in_elem_data_16_V_read(tmp_data_16_V_reg_2712),
    .in_elem_data_17_V_read(tmp_data_17_V_reg_2717),
    .in_elem_data_18_V_read(tmp_data_18_V_reg_2722),
    .in_elem_data_19_V_read(tmp_data_19_V_reg_2727),
    .in_elem_data_20_V_read(tmp_data_20_V_reg_2732),
    .in_elem_data_21_V_read(tmp_data_21_V_reg_2737),
    .in_elem_data_22_V_read(tmp_data_22_V_reg_2742),
    .in_elem_data_23_V_read(tmp_data_23_V_reg_2747),
    .kernel_window_24_V_read(kernel_data_V_5_24),
    .kernel_window_25_V_read(kernel_data_V_5_25),
    .kernel_window_26_V_read(kernel_data_V_5_26),
    .kernel_window_27_V_read(kernel_data_V_5_27),
    .kernel_window_28_V_read(kernel_data_V_5_28),
    .kernel_window_29_V_read(kernel_data_V_5_29),
    .kernel_window_30_V_read(kernel_data_V_5_30),
    .kernel_window_31_V_read(kernel_data_V_5_31),
    .kernel_window_32_V_read(kernel_data_V_5_32),
    .kernel_window_33_V_read(kernel_data_V_5_33),
    .kernel_window_34_V_read(kernel_data_V_5_34),
    .kernel_window_35_V_read(kernel_data_V_5_35),
    .kernel_window_36_V_read(kernel_data_V_5_36),
    .kernel_window_37_V_read(kernel_data_V_5_37),
    .kernel_window_38_V_read(kernel_data_V_5_38),
    .kernel_window_39_V_read(kernel_data_V_5_39),
    .kernel_window_40_V_read(kernel_data_V_5_40),
    .kernel_window_41_V_read(kernel_data_V_5_41),
    .kernel_window_42_V_read(kernel_data_V_5_42),
    .kernel_window_43_V_read(kernel_data_V_5_43),
    .kernel_window_44_V_read(kernel_data_V_5_44),
    .kernel_window_45_V_read(kernel_data_V_5_45),
    .kernel_window_46_V_read(kernel_data_V_5_46),
    .kernel_window_47_V_read(kernel_data_V_5_47),
    .kernel_window_72_V_read(kernel_data_V_5_72),
    .kernel_window_73_V_read(kernel_data_V_5_73),
    .kernel_window_74_V_read(kernel_data_V_5_74),
    .kernel_window_75_V_read(kernel_data_V_5_75),
    .kernel_window_76_V_read(kernel_data_V_5_76),
    .kernel_window_77_V_read(kernel_data_V_5_77),
    .kernel_window_78_V_read(kernel_data_V_5_78),
    .kernel_window_79_V_read(kernel_data_V_5_79),
    .kernel_window_80_V_read(kernel_data_V_5_80),
    .kernel_window_81_V_read(kernel_data_V_5_81),
    .kernel_window_82_V_read(kernel_data_V_5_82),
    .kernel_window_83_V_read(kernel_data_V_5_83),
    .kernel_window_84_V_read(kernel_data_V_5_84),
    .kernel_window_85_V_read(kernel_data_V_5_85),
    .kernel_window_86_V_read(kernel_data_V_5_86),
    .kernel_window_87_V_read(kernel_data_V_5_87),
    .kernel_window_88_V_read(kernel_data_V_5_88),
    .kernel_window_89_V_read(kernel_data_V_5_89),
    .kernel_window_90_V_read(kernel_data_V_5_90),
    .kernel_window_91_V_read(kernel_data_V_5_91),
    .kernel_window_92_V_read(kernel_data_V_5_92),
    .kernel_window_93_V_read(kernel_data_V_5_93),
    .kernel_window_94_V_read(kernel_data_V_5_94),
    .kernel_window_95_V_read(kernel_data_V_5_95),
    .ap_return_0(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_0),
    .ap_return_1(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_1),
    .ap_return_2(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_2),
    .ap_return_3(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_3),
    .ap_return_4(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_4),
    .ap_return_5(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_5),
    .ap_return_6(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_6),
    .ap_return_7(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_7),
    .ap_return_8(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_8),
    .ap_return_9(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_9),
    .ap_return_10(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_10),
    .ap_return_11(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_11),
    .ap_return_12(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_12),
    .ap_return_13(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_13),
    .ap_return_14(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_14),
    .ap_return_15(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_15),
    .ap_return_16(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_16),
    .ap_return_17(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_17),
    .ap_return_18(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_18),
    .ap_return_19(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_19),
    .ap_return_20(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_20),
    .ap_return_21(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_21),
    .ap_return_22(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_22),
    .ap_return_23(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_23),
    .ap_return_24(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_24),
    .ap_return_25(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_25),
    .ap_return_26(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_26),
    .ap_return_27(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_27),
    .ap_return_28(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_28),
    .ap_return_29(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_29),
    .ap_return_30(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_30),
    .ap_return_31(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_31),
    .ap_return_32(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_32),
    .ap_return_33(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_33),
    .ap_return_34(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_34),
    .ap_return_35(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_35),
    .ap_return_36(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_36),
    .ap_return_37(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_37),
    .ap_return_38(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_38),
    .ap_return_39(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_39),
    .ap_return_40(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_40),
    .ap_return_41(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_41),
    .ap_return_42(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_42),
    .ap_return_43(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_43),
    .ap_return_44(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_44),
    .ap_return_45(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_45),
    .ap_return_46(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_46),
    .ap_return_47(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_47),
    .ap_return_48(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_48),
    .ap_return_49(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_49),
    .ap_return_50(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_50),
    .ap_return_51(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_51),
    .ap_return_52(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_52),
    .ap_return_53(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_53),
    .ap_return_54(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_54),
    .ap_return_55(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_55),
    .ap_return_56(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_56),
    .ap_return_57(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_57),
    .ap_return_58(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_58),
    .ap_return_59(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_59),
    .ap_return_60(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_60),
    .ap_return_61(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_61),
    .ap_return_62(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_62),
    .ap_return_63(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_63),
    .ap_return_64(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_64),
    .ap_return_65(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_65),
    .ap_return_66(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_66),
    .ap_return_67(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_67),
    .ap_return_68(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_68),
    .ap_return_69(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_69),
    .ap_return_70(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_70),
    .ap_return_71(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_71),
    .ap_return_72(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_72),
    .ap_return_73(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_73),
    .ap_return_74(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_74),
    .ap_return_75(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_75),
    .ap_return_76(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_76),
    .ap_return_77(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_77),
    .ap_return_78(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_78),
    .ap_return_79(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_79),
    .ap_return_80(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_80),
    .ap_return_81(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_81),
    .ap_return_82(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_82),
    .ap_return_83(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_83),
    .ap_return_84(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_84),
    .ap_return_85(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_85),
    .ap_return_86(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_86),
    .ap_return_87(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_87),
    .ap_return_88(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_88),
    .ap_return_89(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_89),
    .ap_return_90(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_90),
    .ap_return_91(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_91),
    .ap_return_92(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_92),
    .ap_return_93(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_93),
    .ap_return_94(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_94),
    .ap_return_95(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_95),
    .ap_ce(call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_start_reg <= 1'b1;
        end else if ((call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_ready == 1'b1)) begin
            call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_389)) begin
        if ((1'b1 == ap_condition_866)) begin
            ap_phi_reg_pp0_iter1_storemerge_i_i_reg_1011 <= 32'd0;
        end else if ((1'b1 == ap_condition_411)) begin
            ap_phi_reg_pp0_iter1_storemerge_i_i_reg_1011 <= select_ln213_fu_1482_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge_i_i_reg_1011 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_1011;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_fu_1338_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_1000 <= add_ln233_fu_1344_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_1000 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_859)) begin
        if ((icmp_ln203_fu_1408_p2 == 1'd1)) begin
            pX <= 32'd0;
        end else if ((icmp_ln203_fu_1408_p2 == 1'd0)) begin
            pX <= add_ln216_fu_1414_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1023)) begin
        if ((icmp_ln207_fu_1458_p2 == 1'd1)) begin
            pY <= 32'd0;
        end else if ((icmp_ln207_fu_1458_p2 == 1'd0)) begin
            pY <= add_ln211_fu_1464_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_859)) begin
        if ((icmp_ln203_fu_1408_p2 == 1'd1)) begin
            sX <= 32'd0;
        end else if ((icmp_ln203_fu_1408_p2 == 1'd0)) begin
            sX <= select_ln218_fu_1432_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_fu_1338_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln185_2_reg_2615 <= and_ln185_2_fu_1402_p2;
        icmp_ln203_reg_2619 <= icmp_ln203_fu_1408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln185_2_reg_2615_pp0_iter1_reg <= and_ln185_2_reg_2615;
        icmp_ln233_reg_2606 <= icmp_ln233_fu_1338_p2;
        icmp_ln233_reg_2606_pp0_iter1_reg <= icmp_ln233_reg_2606;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln185_2_reg_2615_pp0_iter2_reg <= and_ln185_2_reg_2615_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_data_V_5_24 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_48;
        kernel_data_V_5_25 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_49;
        kernel_data_V_5_26 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_50;
        kernel_data_V_5_27 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_51;
        kernel_data_V_5_28 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_52;
        kernel_data_V_5_29 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_53;
        kernel_data_V_5_30 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_54;
        kernel_data_V_5_31 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_55;
        kernel_data_V_5_32 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_56;
        kernel_data_V_5_33 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_57;
        kernel_data_V_5_34 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_58;
        kernel_data_V_5_35 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_59;
        kernel_data_V_5_36 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_60;
        kernel_data_V_5_37 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_61;
        kernel_data_V_5_38 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_62;
        kernel_data_V_5_39 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_63;
        kernel_data_V_5_40 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_64;
        kernel_data_V_5_41 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_65;
        kernel_data_V_5_42 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_66;
        kernel_data_V_5_43 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_67;
        kernel_data_V_5_44 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_68;
        kernel_data_V_5_45 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_69;
        kernel_data_V_5_46 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_70;
        kernel_data_V_5_47 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_71;
        kernel_data_V_5_72 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_72;
        kernel_data_V_5_73 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_73;
        kernel_data_V_5_74 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_74;
        kernel_data_V_5_75 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_75;
        kernel_data_V_5_76 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_76;
        kernel_data_V_5_77 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_77;
        kernel_data_V_5_78 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_78;
        kernel_data_V_5_79 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_79;
        kernel_data_V_5_80 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_80;
        kernel_data_V_5_81 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_81;
        kernel_data_V_5_82 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_82;
        kernel_data_V_5_83 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_83;
        kernel_data_V_5_84 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_84;
        kernel_data_V_5_85 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_85;
        kernel_data_V_5_86 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_86;
        kernel_data_V_5_87 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_87;
        kernel_data_V_5_88 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_88;
        kernel_data_V_5_89 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_89;
        kernel_data_V_5_90 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_90;
        kernel_data_V_5_91 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_91;
        kernel_data_V_5_92 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_92;
        kernel_data_V_5_93 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_93;
        kernel_data_V_5_94 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_94;
        kernel_data_V_5_95 <= call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_return_95;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_reg_2619 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sY <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_1011;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter1_reg))) begin
        tmp_data_0_V_1_reg_2752 <= tmp_data_0_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1022_ap_return;
        tmp_data_10_V_1_reg_2802 <= tmp_data_10_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1102_ap_return;
        tmp_data_11_V_1_reg_2807 <= tmp_data_11_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1110_ap_return;
        tmp_data_12_V_1_reg_2812 <= tmp_data_12_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1118_ap_return;
        tmp_data_13_V_1_reg_2817 <= tmp_data_13_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1126_ap_return;
        tmp_data_14_V_1_reg_2822 <= tmp_data_14_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1134_ap_return;
        tmp_data_15_V_1_reg_2827 <= tmp_data_15_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1142_ap_return;
        tmp_data_16_V_1_reg_2832 <= tmp_data_16_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1150_ap_return;
        tmp_data_17_V_1_reg_2837 <= tmp_data_17_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1158_ap_return;
        tmp_data_18_V_1_reg_2842 <= tmp_data_18_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1166_ap_return;
        tmp_data_19_V_1_reg_2847 <= tmp_data_19_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1174_ap_return;
        tmp_data_1_V_1_reg_2757 <= tmp_data_1_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1030_ap_return;
        tmp_data_20_V_1_reg_2852 <= tmp_data_20_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1182_ap_return;
        tmp_data_21_V_1_reg_2857 <= tmp_data_21_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1190_ap_return;
        tmp_data_22_V_1_reg_2862 <= tmp_data_22_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1198_ap_return;
        tmp_data_23_V_1_reg_2867 <= tmp_data_23_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1206_ap_return;
        tmp_data_2_V_1_reg_2762 <= tmp_data_2_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1038_ap_return;
        tmp_data_3_V_1_reg_2767 <= tmp_data_3_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1046_ap_return;
        tmp_data_4_V_1_reg_2772 <= tmp_data_4_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1054_ap_return;
        tmp_data_5_V_1_reg_2777 <= tmp_data_5_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1062_ap_return;
        tmp_data_6_V_1_reg_2782 <= tmp_data_6_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1070_ap_return;
        tmp_data_7_V_1_reg_2787 <= tmp_data_7_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1078_ap_return;
        tmp_data_8_V_1_reg_2792 <= tmp_data_8_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1086_ap_return;
        tmp_data_9_V_1_reg_2797 <= tmp_data_9_V_1_reduce_ap_fixed_4_Op_max_ap_fixed_16_6_0_0_0_s_fu_1094_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_data_0_V_reg_2632 <= data_V_data_0_V_dout;
        tmp_data_10_V_reg_2682 <= data_V_data_10_V_dout;
        tmp_data_11_V_reg_2687 <= data_V_data_11_V_dout;
        tmp_data_12_V_reg_2692 <= data_V_data_12_V_dout;
        tmp_data_13_V_reg_2697 <= data_V_data_13_V_dout;
        tmp_data_14_V_reg_2702 <= data_V_data_14_V_dout;
        tmp_data_15_V_reg_2707 <= data_V_data_15_V_dout;
        tmp_data_16_V_reg_2712 <= data_V_data_16_V_dout;
        tmp_data_17_V_reg_2717 <= data_V_data_17_V_dout;
        tmp_data_18_V_reg_2722 <= data_V_data_18_V_dout;
        tmp_data_19_V_reg_2727 <= data_V_data_19_V_dout;
        tmp_data_1_V_reg_2637 <= data_V_data_1_V_dout;
        tmp_data_20_V_reg_2732 <= data_V_data_20_V_dout;
        tmp_data_21_V_reg_2737 <= data_V_data_21_V_dout;
        tmp_data_22_V_reg_2742 <= data_V_data_22_V_dout;
        tmp_data_23_V_reg_2747 <= data_V_data_23_V_dout;
        tmp_data_2_V_reg_2642 <= data_V_data_2_V_dout;
        tmp_data_3_V_reg_2647 <= data_V_data_3_V_dout;
        tmp_data_4_V_reg_2652 <= data_V_data_4_V_dout;
        tmp_data_5_V_reg_2657 <= data_V_data_5_V_dout;
        tmp_data_6_V_reg_2662 <= data_V_data_6_V_dout;
        tmp_data_7_V_reg_2667 <= data_V_data_7_V_dout;
        tmp_data_8_V_reg_2672 <= data_V_data_8_V_dout;
        tmp_data_9_V_reg_2677 <= data_V_data_9_V_dout;
    end
end

always @ (*) begin
    if ((icmp_ln233_fu_1338_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln203_reg_2619 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_sY_load = ap_phi_reg_pp0_iter1_storemerge_i_i_reg_1011;
    end else begin
        ap_sig_allocacmp_sY_load = sY;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp174) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_ce = 1'b1;
    end else begin
        call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_10_V_blk_n = data_V_data_10_V_empty_n;
    end else begin
        data_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_10_V_read = 1'b1;
    end else begin
        data_V_data_10_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_11_V_blk_n = data_V_data_11_V_empty_n;
    end else begin
        data_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_11_V_read = 1'b1;
    end else begin
        data_V_data_11_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_12_V_blk_n = data_V_data_12_V_empty_n;
    end else begin
        data_V_data_12_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_12_V_read = 1'b1;
    end else begin
        data_V_data_12_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_13_V_blk_n = data_V_data_13_V_empty_n;
    end else begin
        data_V_data_13_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_13_V_read = 1'b1;
    end else begin
        data_V_data_13_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_14_V_blk_n = data_V_data_14_V_empty_n;
    end else begin
        data_V_data_14_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_14_V_read = 1'b1;
    end else begin
        data_V_data_14_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_15_V_blk_n = data_V_data_15_V_empty_n;
    end else begin
        data_V_data_15_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_15_V_read = 1'b1;
    end else begin
        data_V_data_15_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_16_V_blk_n = data_V_data_16_V_empty_n;
    end else begin
        data_V_data_16_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_16_V_read = 1'b1;
    end else begin
        data_V_data_16_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_17_V_blk_n = data_V_data_17_V_empty_n;
    end else begin
        data_V_data_17_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_17_V_read = 1'b1;
    end else begin
        data_V_data_17_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_18_V_blk_n = data_V_data_18_V_empty_n;
    end else begin
        data_V_data_18_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_18_V_read = 1'b1;
    end else begin
        data_V_data_18_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_19_V_blk_n = data_V_data_19_V_empty_n;
    end else begin
        data_V_data_19_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_19_V_read = 1'b1;
    end else begin
        data_V_data_19_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_20_V_blk_n = data_V_data_20_V_empty_n;
    end else begin
        data_V_data_20_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_20_V_read = 1'b1;
    end else begin
        data_V_data_20_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_21_V_blk_n = data_V_data_21_V_empty_n;
    end else begin
        data_V_data_21_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_21_V_read = 1'b1;
    end else begin
        data_V_data_21_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_22_V_blk_n = data_V_data_22_V_empty_n;
    end else begin
        data_V_data_22_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_22_V_read = 1'b1;
    end else begin
        data_V_data_22_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_23_V_blk_n = data_V_data_23_V_empty_n;
    end else begin
        data_V_data_23_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_23_V_read = 1'b1;
    end else begin
        data_V_data_23_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_4_V_blk_n = data_V_data_4_V_empty_n;
    end else begin
        data_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_4_V_read = 1'b1;
    end else begin
        data_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_5_V_blk_n = data_V_data_5_V_empty_n;
    end else begin
        data_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_5_V_read = 1'b1;
    end else begin
        data_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_6_V_blk_n = data_V_data_6_V_empty_n;
    end else begin
        data_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_6_V_read = 1'b1;
    end else begin
        data_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_7_V_blk_n = data_V_data_7_V_empty_n;
    end else begin
        data_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_7_V_read = 1'b1;
    end else begin
        data_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_8_V_blk_n = data_V_data_8_V_empty_n;
    end else begin
        data_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_8_V_read = 1'b1;
    end else begin
        data_V_data_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2606 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_9_V_blk_n = data_V_data_9_V_empty_n;
    end else begin
        data_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_9_V_read = 1'b1;
    end else begin
        data_V_data_9_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_10_V_blk_n = res_V_data_10_V_full_n;
    end else begin
        res_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_10_V_write = 1'b1;
    end else begin
        res_V_data_10_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_11_V_blk_n = res_V_data_11_V_full_n;
    end else begin
        res_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_11_V_write = 1'b1;
    end else begin
        res_V_data_11_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_12_V_blk_n = res_V_data_12_V_full_n;
    end else begin
        res_V_data_12_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_12_V_write = 1'b1;
    end else begin
        res_V_data_12_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_13_V_blk_n = res_V_data_13_V_full_n;
    end else begin
        res_V_data_13_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_13_V_write = 1'b1;
    end else begin
        res_V_data_13_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_14_V_blk_n = res_V_data_14_V_full_n;
    end else begin
        res_V_data_14_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_14_V_write = 1'b1;
    end else begin
        res_V_data_14_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_15_V_blk_n = res_V_data_15_V_full_n;
    end else begin
        res_V_data_15_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_15_V_write = 1'b1;
    end else begin
        res_V_data_15_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_16_V_blk_n = res_V_data_16_V_full_n;
    end else begin
        res_V_data_16_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_16_V_write = 1'b1;
    end else begin
        res_V_data_16_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_17_V_blk_n = res_V_data_17_V_full_n;
    end else begin
        res_V_data_17_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_17_V_write = 1'b1;
    end else begin
        res_V_data_17_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_18_V_blk_n = res_V_data_18_V_full_n;
    end else begin
        res_V_data_18_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_18_V_write = 1'b1;
    end else begin
        res_V_data_18_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_19_V_blk_n = res_V_data_19_V_full_n;
    end else begin
        res_V_data_19_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_19_V_write = 1'b1;
    end else begin
        res_V_data_19_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_20_V_blk_n = res_V_data_20_V_full_n;
    end else begin
        res_V_data_20_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_20_V_write = 1'b1;
    end else begin
        res_V_data_20_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_21_V_blk_n = res_V_data_21_V_full_n;
    end else begin
        res_V_data_21_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_21_V_write = 1'b1;
    end else begin
        res_V_data_21_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_22_V_blk_n = res_V_data_22_V_full_n;
    end else begin
        res_V_data_22_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_22_V_write = 1'b1;
    end else begin
        res_V_data_22_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_23_V_blk_n = res_V_data_23_V_full_n;
    end else begin
        res_V_data_23_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_23_V_write = 1'b1;
    end else begin
        res_V_data_23_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n;
    end else begin
        res_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_6_V_write = 1'b1;
    end else begin
        res_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n;
    end else begin
        res_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_7_V_write = 1'b1;
    end else begin
        res_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_8_V_blk_n = res_V_data_8_V_full_n;
    end else begin
        res_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_8_V_write = 1'b1;
    end else begin
        res_V_data_8_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_9_V_blk_n = res_V_data_9_V_full_n;
    end else begin
        res_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_9_V_write = 1'b1;
    end else begin
        res_V_data_9_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln233_fu_1338_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln233_fu_1338_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln211_fu_1464_p2 = (pY + 32'd1);

assign add_ln213_fu_1476_p2 = (ap_sig_allocacmp_sY_load + 32'd1);

assign add_ln216_fu_1414_p2 = (pX + 32'd1);

assign add_ln218_fu_1426_p2 = (sX + 32'd1);

assign add_ln233_fu_1344_p2 = (indvar_flatten_reg_1000 + 5'd1);

assign and_ln185_1_fu_1396_p2 = (icmp_ln185_3_fu_1384_p2 & icmp_ln185_2_fu_1374_p2);

assign and_ln185_2_fu_1402_p2 = (and_ln185_fu_1390_p2 & and_ln185_1_fu_1396_p2);

assign and_ln185_fu_1390_p2 = (icmp_ln185_fu_1354_p2 & icmp_ln185_1_fu_1364_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (io_acc_block_signal_op343 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((io_acc_block_signal_op94 == 1'b0) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (io_acc_block_signal_op343 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((io_acc_block_signal_op94 == 1'b0) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp174 = (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (io_acc_block_signal_op343 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((io_acc_block_signal_op94 == 1'b0) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (io_acc_block_signal_op343 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((io_acc_block_signal_op94 == 1'b0) & (icmp_ln233_reg_2606 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0_ignore_call78 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((io_acc_block_signal_op94 == 1'b0) & (icmp_ln233_reg_2606 == 1'd0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1_ignore_call78 = ((io_acc_block_signal_op94 == 1'b0) & (icmp_ln233_reg_2606 == 1'd0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2_ignore_call78 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3 = ((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (io_acc_block_signal_op343 == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3_ignore_call78 = ((1'd1 == and_ln185_2_reg_2615_pp0_iter2_reg) & (io_acc_block_signal_op343 == 1'b0));
end

always @ (*) begin
    ap_condition_1023 = ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_fu_1408_p2 == 1'd1) & (icmp_ln233_fu_1338_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_389 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_411 = ((icmp_ln203_fu_1408_p2 == 1'd1) & (icmp_ln207_fu_1458_p2 == 1'd0) & (icmp_ln233_fu_1338_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_859 = ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_fu_1338_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_866 = ((icmp_ln207_fu_1458_p2 == 1'd1) & (icmp_ln203_fu_1408_p2 == 1'd1) & (icmp_ln233_fu_1338_p2 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge_i_i_reg_1011 = 'bx;

assign ap_ready = internal_ap_ready;

assign call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_start = call_ret_shift_line_buffer_array_ap_fixed_24u_config16_s_fu_1214_ap_start_reg;

assign icmp_ln185_1_fu_1364_p2 = ((ap_sig_allocacmp_sY_load == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln185_2_fu_1374_p2 = (($signed(pY) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln185_3_fu_1384_p2 = (($signed(pX) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_1354_p2 = ((sX == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_1408_p2 = ((pX == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_1458_p2 = ((pY == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln233_fu_1338_p2 = ((indvar_flatten_reg_1000 == 5'd16) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op343 = (res_V_data_9_V_full_n & res_V_data_8_V_full_n & res_V_data_7_V_full_n & res_V_data_6_V_full_n & res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_23_V_full_n & res_V_data_22_V_full_n & res_V_data_21_V_full_n & res_V_data_20_V_full_n & res_V_data_1_V_full_n & res_V_data_19_V_full_n & res_V_data_18_V_full_n & res_V_data_17_V_full_n & res_V_data_16_V_full_n & res_V_data_15_V_full_n & res_V_data_14_V_full_n & res_V_data_13_V_full_n & res_V_data_12_V_full_n & res_V_data_11_V_full_n & res_V_data_10_V_full_n & res_V_data_0_V_full_n);

assign io_acc_block_signal_op94 = (data_V_data_9_V_empty_n & data_V_data_8_V_empty_n & data_V_data_7_V_empty_n & data_V_data_6_V_empty_n & data_V_data_5_V_empty_n & data_V_data_4_V_empty_n & data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_23_V_empty_n & data_V_data_22_V_empty_n & data_V_data_21_V_empty_n & data_V_data_20_V_empty_n & data_V_data_1_V_empty_n & data_V_data_19_V_empty_n & data_V_data_18_V_empty_n & data_V_data_17_V_empty_n & data_V_data_16_V_empty_n & data_V_data_15_V_empty_n & data_V_data_14_V_empty_n & data_V_data_13_V_empty_n & data_V_data_12_V_empty_n & data_V_data_11_V_empty_n & data_V_data_10_V_empty_n & data_V_data_0_V_empty_n);

assign res_V_data_0_V_din = tmp_data_0_V_1_reg_2752;

assign res_V_data_10_V_din = tmp_data_10_V_1_reg_2802;

assign res_V_data_11_V_din = tmp_data_11_V_1_reg_2807;

assign res_V_data_12_V_din = tmp_data_12_V_1_reg_2812;

assign res_V_data_13_V_din = tmp_data_13_V_1_reg_2817;

assign res_V_data_14_V_din = tmp_data_14_V_1_reg_2822;

assign res_V_data_15_V_din = tmp_data_15_V_1_reg_2827;

assign res_V_data_16_V_din = tmp_data_16_V_1_reg_2832;

assign res_V_data_17_V_din = tmp_data_17_V_1_reg_2837;

assign res_V_data_18_V_din = tmp_data_18_V_1_reg_2842;

assign res_V_data_19_V_din = tmp_data_19_V_1_reg_2847;

assign res_V_data_1_V_din = tmp_data_1_V_1_reg_2757;

assign res_V_data_20_V_din = tmp_data_20_V_1_reg_2852;

assign res_V_data_21_V_din = tmp_data_21_V_1_reg_2857;

assign res_V_data_22_V_din = tmp_data_22_V_1_reg_2862;

assign res_V_data_23_V_din = tmp_data_23_V_1_reg_2867;

assign res_V_data_2_V_din = tmp_data_2_V_1_reg_2762;

assign res_V_data_3_V_din = tmp_data_3_V_1_reg_2767;

assign res_V_data_4_V_din = tmp_data_4_V_1_reg_2772;

assign res_V_data_5_V_din = tmp_data_5_V_1_reg_2777;

assign res_V_data_6_V_din = tmp_data_6_V_1_reg_2782;

assign res_V_data_7_V_din = tmp_data_7_V_1_reg_2787;

assign res_V_data_8_V_din = tmp_data_8_V_1_reg_2792;

assign res_V_data_9_V_din = tmp_data_9_V_1_reg_2797;

assign select_ln213_fu_1482_p3 = ((icmp_ln185_1_fu_1364_p2[0:0] === 1'b1) ? 32'd0 : add_ln213_fu_1476_p2);

assign select_ln218_fu_1432_p3 = ((icmp_ln185_fu_1354_p2[0:0] === 1'b1) ? 32'd0 : add_ln218_fu_1426_p2);

assign start_out = real_start;

endmodule //pooling2d_cl_array_array_ap_fixed_24u_config16_s
