// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax_stable_array_array_softmax_config28_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        data_V_data_4_V_dout,
        data_V_data_4_V_empty_n,
        data_V_data_4_V_read,
        data_V_data_5_V_dout,
        data_V_data_5_V_empty_n,
        data_V_data_5_V_read,
        data_V_data_6_V_dout,
        data_V_data_6_V_empty_n,
        data_V_data_6_V_read,
        data_V_data_7_V_dout,
        data_V_data_7_V_empty_n,
        data_V_data_7_V_read,
        data_V_data_8_V_dout,
        data_V_data_8_V_empty_n,
        data_V_data_8_V_read,
        data_V_data_9_V_dout,
        data_V_data_9_V_empty_n,
        data_V_data_9_V_read,
        res_V_data_0_V_TDATA,
        res_V_data_0_V_TVALID,
        res_V_data_0_V_TREADY,
        res_V_data_1_V_TDATA,
        res_V_data_1_V_TVALID,
        res_V_data_1_V_TREADY,
        res_V_data_2_V_TDATA,
        res_V_data_2_V_TVALID,
        res_V_data_2_V_TREADY,
        res_V_data_3_V_TDATA,
        res_V_data_3_V_TVALID,
        res_V_data_3_V_TREADY,
        res_V_data_4_V_TDATA,
        res_V_data_4_V_TVALID,
        res_V_data_4_V_TREADY,
        res_V_data_5_V_TDATA,
        res_V_data_5_V_TVALID,
        res_V_data_5_V_TREADY,
        res_V_data_6_V_TDATA,
        res_V_data_6_V_TVALID,
        res_V_data_6_V_TREADY,
        res_V_data_7_V_TDATA,
        res_V_data_7_V_TVALID,
        res_V_data_7_V_TREADY,
        res_V_data_8_V_TDATA,
        res_V_data_8_V_TVALID,
        res_V_data_8_V_TREADY,
        res_V_data_9_V_TDATA,
        res_V_data_9_V_TVALID,
        res_V_data_9_V_TREADY,
        data_V_data_0_V_blk_n,
        data_V_data_1_V_blk_n,
        data_V_data_2_V_blk_n,
        data_V_data_3_V_blk_n,
        data_V_data_4_V_blk_n,
        data_V_data_5_V_blk_n,
        data_V_data_6_V_blk_n,
        data_V_data_7_V_blk_n,
        data_V_data_8_V_blk_n,
        data_V_data_9_V_blk_n,
        res_V_data_0_V_TDATA_blk_n,
        res_V_data_1_V_TDATA_blk_n,
        res_V_data_2_V_TDATA_blk_n,
        res_V_data_3_V_TDATA_blk_n,
        res_V_data_4_V_TDATA_blk_n,
        res_V_data_5_V_TDATA_blk_n,
        res_V_data_6_V_TDATA_blk_n,
        res_V_data_7_V_TDATA_blk_n,
        res_V_data_8_V_TDATA_blk_n,
        res_V_data_9_V_TDATA_blk_n
);

parameter    ap_ST_fsm_pp0_stage0 = 10'd1;
parameter    ap_ST_fsm_pp0_stage1 = 10'd2;
parameter    ap_ST_fsm_pp0_stage2 = 10'd4;
parameter    ap_ST_fsm_pp0_stage3 = 10'd8;
parameter    ap_ST_fsm_pp0_stage4 = 10'd16;
parameter    ap_ST_fsm_pp0_stage5 = 10'd32;
parameter    ap_ST_fsm_pp0_stage6 = 10'd64;
parameter    ap_ST_fsm_pp0_stage7 = 10'd128;
parameter    ap_ST_fsm_pp0_stage8 = 10'd256;
parameter    ap_ST_fsm_pp0_stage9 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [15:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [15:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [15:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
input  [15:0] data_V_data_4_V_dout;
input   data_V_data_4_V_empty_n;
output   data_V_data_4_V_read;
input  [15:0] data_V_data_5_V_dout;
input   data_V_data_5_V_empty_n;
output   data_V_data_5_V_read;
input  [15:0] data_V_data_6_V_dout;
input   data_V_data_6_V_empty_n;
output   data_V_data_6_V_read;
input  [15:0] data_V_data_7_V_dout;
input   data_V_data_7_V_empty_n;
output   data_V_data_7_V_read;
input  [15:0] data_V_data_8_V_dout;
input   data_V_data_8_V_empty_n;
output   data_V_data_8_V_read;
input  [15:0] data_V_data_9_V_dout;
input   data_V_data_9_V_empty_n;
output   data_V_data_9_V_read;
output  [15:0] res_V_data_0_V_TDATA;
output   res_V_data_0_V_TVALID;
input   res_V_data_0_V_TREADY;
output  [15:0] res_V_data_1_V_TDATA;
output   res_V_data_1_V_TVALID;
input   res_V_data_1_V_TREADY;
output  [15:0] res_V_data_2_V_TDATA;
output   res_V_data_2_V_TVALID;
input   res_V_data_2_V_TREADY;
output  [15:0] res_V_data_3_V_TDATA;
output   res_V_data_3_V_TVALID;
input   res_V_data_3_V_TREADY;
output  [15:0] res_V_data_4_V_TDATA;
output   res_V_data_4_V_TVALID;
input   res_V_data_4_V_TREADY;
output  [15:0] res_V_data_5_V_TDATA;
output   res_V_data_5_V_TVALID;
input   res_V_data_5_V_TREADY;
output  [15:0] res_V_data_6_V_TDATA;
output   res_V_data_6_V_TVALID;
input   res_V_data_6_V_TREADY;
output  [15:0] res_V_data_7_V_TDATA;
output   res_V_data_7_V_TVALID;
input   res_V_data_7_V_TREADY;
output  [15:0] res_V_data_8_V_TDATA;
output   res_V_data_8_V_TVALID;
input   res_V_data_8_V_TREADY;
output  [15:0] res_V_data_9_V_TDATA;
output   res_V_data_9_V_TVALID;
input   res_V_data_9_V_TREADY;
output   data_V_data_0_V_blk_n;
output   data_V_data_1_V_blk_n;
output   data_V_data_2_V_blk_n;
output   data_V_data_3_V_blk_n;
output   data_V_data_4_V_blk_n;
output   data_V_data_5_V_blk_n;
output   data_V_data_6_V_blk_n;
output   data_V_data_7_V_blk_n;
output   data_V_data_8_V_blk_n;
output   data_V_data_9_V_blk_n;
output   res_V_data_0_V_TDATA_blk_n;
output   res_V_data_1_V_TDATA_blk_n;
output   res_V_data_2_V_TDATA_blk_n;
output   res_V_data_3_V_TDATA_blk_n;
output   res_V_data_4_V_TDATA_blk_n;
output   res_V_data_5_V_TDATA_blk_n;
output   res_V_data_6_V_TDATA_blk_n;
output   res_V_data_7_V_TDATA_blk_n;
output   res_V_data_8_V_TDATA_blk_n;
output   res_V_data_9_V_TDATA_blk_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg data_V_data_4_V_read;
reg data_V_data_5_V_read;
reg data_V_data_6_V_read;
reg data_V_data_7_V_read;
reg data_V_data_8_V_read;
reg data_V_data_9_V_read;
reg res_V_data_0_V_TVALID;
reg res_V_data_1_V_TVALID;
reg res_V_data_2_V_TVALID;
reg res_V_data_3_V_TVALID;
reg res_V_data_4_V_TVALID;
reg res_V_data_5_V_TVALID;
reg res_V_data_6_V_TVALID;
reg res_V_data_7_V_TVALID;
reg res_V_data_8_V_TVALID;
reg res_V_data_9_V_TVALID;
reg data_V_data_0_V_blk_n;
reg data_V_data_1_V_blk_n;
reg data_V_data_2_V_blk_n;
reg data_V_data_3_V_blk_n;
reg data_V_data_4_V_blk_n;
reg data_V_data_5_V_blk_n;
reg data_V_data_6_V_blk_n;
reg data_V_data_7_V_blk_n;
reg data_V_data_8_V_blk_n;
reg data_V_data_9_V_blk_n;
reg res_V_data_0_V_TDATA_blk_n;
reg res_V_data_1_V_TDATA_blk_n;
reg res_V_data_2_V_TDATA_blk_n;
reg res_V_data_3_V_TDATA_blk_n;
reg res_V_data_4_V_TDATA_blk_n;
reg res_V_data_5_V_TDATA_blk_n;
reg res_V_data_6_V_TDATA_blk_n;
reg res_V_data_7_V_TDATA_blk_n;
reg res_V_data_8_V_TDATA_blk_n;
reg res_V_data_9_V_TDATA_blk_n;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state20_pp0_stage9_iter1;
wire    ap_block_state30_pp0_stage9_iter2;
wire    ap_block_pp0_stage9_11001;
reg   [9:0] exp_table5_address0;
reg    exp_table5_ce0;
wire   [16:0] exp_table5_q0;
wire   [9:0] invert_table6_address0;
reg    invert_table6_ce0;
wire   [17:0] invert_table6_q0;
wire    io_acc_block_signal_op42;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state11_pp0_stage0_iter1;
wire    ap_block_state21_pp0_stage0_iter2;
wire    ap_block_state31_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg  signed [15:0] data_array_0_V_reg_1961;
reg  signed [15:0] data_array_1_V_reg_1967;
reg  signed [15:0] data_array_2_V_reg_1973;
reg  signed [15:0] data_array_3_V_reg_1979;
reg  signed [15:0] data_array_4_V_reg_1985;
reg  signed [15:0] data_array_5_V_reg_1991;
reg  signed [15:0] data_array_6_V_reg_1997;
reg  signed [15:0] data_array_7_V_reg_2003;
reg  signed [15:0] data_array_8_V_reg_2009;
reg  signed [15:0] data_array_9_V_reg_2016;
wire   [0:0] icmp_ln1496_fu_552_p2;
reg   [0:0] icmp_ln1496_reg_2023;
wire   [0:0] icmp_ln1496_1_fu_558_p2;
reg   [0:0] icmp_ln1496_1_reg_2028;
wire   [0:0] icmp_ln1496_3_fu_564_p2;
reg   [0:0] icmp_ln1496_3_reg_2033;
wire   [0:0] icmp_ln1496_4_fu_570_p2;
reg   [0:0] icmp_ln1496_4_reg_2038;
wire   [15:0] select_ln86_6_fu_630_p3;
reg   [15:0] select_ln86_6_reg_2043;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state12_pp0_stage1_iter1;
wire    ap_block_state22_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
wire   [15:0] select_ln86_7_fu_642_p3;
reg   [15:0] select_ln86_7_reg_2049;
wire   [9:0] y_V_fu_1238_p3;
reg   [9:0] y_V_reg_2055;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state13_pp0_stage2_iter1;
wire    ap_block_state23_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
wire   [9:0] y_V_1_fu_1272_p3;
reg   [9:0] y_V_1_reg_2060;
wire   [9:0] y_V_2_fu_1306_p3;
reg   [9:0] y_V_2_reg_2065;
wire   [9:0] y_V_3_fu_1340_p3;
reg   [9:0] y_V_3_reg_2070;
wire   [9:0] y_V_4_fu_1374_p3;
reg   [9:0] y_V_4_reg_2075;
wire   [9:0] y_V_5_fu_1408_p3;
reg   [9:0] y_V_5_reg_2080;
wire   [9:0] y_V_6_fu_1442_p3;
reg   [9:0] y_V_6_reg_2085;
wire   [9:0] y_V_7_fu_1476_p3;
reg   [9:0] y_V_7_reg_2090;
wire   [9:0] y_V_8_fu_1510_p3;
reg   [9:0] y_V_8_reg_2095;
wire   [9:0] y_V_9_fu_1544_p3;
reg   [9:0] y_V_9_reg_2100;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state14_pp0_stage3_iter1;
wire    ap_block_state24_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
reg   [16:0] exp_res_0_V_1_reg_2110;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state15_pp0_stage4_iter1;
wire    ap_block_state25_pp0_stage4_iter2;
wire    ap_block_pp0_stage4_11001;
reg   [16:0] exp_res_0_V_1_reg_2110_pp0_iter1_reg;
reg   [16:0] exp_res_1_V_1_reg_2121;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state16_pp0_stage5_iter1;
wire    ap_block_state26_pp0_stage5_iter2;
wire    ap_block_pp0_stage5_11001;
reg   [16:0] exp_res_1_V_1_reg_2121_pp0_iter1_reg;
reg   [16:0] exp_res_2_V_1_reg_2132;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state17_pp0_stage6_iter1;
wire    ap_block_state27_pp0_stage6_iter2;
wire    ap_block_pp0_stage6_11001;
reg   [16:0] exp_res_2_V_1_reg_2132_pp0_iter1_reg;
reg   [16:0] exp_res_3_V_1_reg_2143;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state18_pp0_stage7_iter1;
wire    ap_block_state28_pp0_stage7_iter2;
wire    ap_block_pp0_stage7_11001;
reg   [16:0] exp_res_3_V_1_reg_2143_pp0_iter1_reg;
reg   [16:0] exp_res_4_V_1_reg_2154;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state19_pp0_stage8_iter1;
wire    ap_block_state29_pp0_stage8_iter2;
wire    ap_block_pp0_stage8_11001;
reg   [16:0] exp_res_4_V_1_reg_2154_pp0_iter1_reg;
reg   [16:0] exp_res_5_V_1_reg_2164;
reg   [16:0] exp_res_5_V_1_reg_2164_pp0_iter1_reg;
reg   [16:0] exp_res_6_V_1_reg_2174;
reg   [16:0] exp_res_6_V_1_reg_2174_pp0_iter2_reg;
reg   [16:0] exp_res_7_V_1_reg_2184;
reg   [16:0] exp_res_7_V_1_reg_2184_pp0_iter2_reg;
reg   [16:0] exp_res_8_V_1_reg_2194;
reg   [16:0] exp_res_8_V_1_reg_2194_pp0_iter2_reg;
reg   [16:0] exp_res_9_V_1_reg_2206;
reg   [16:0] exp_res_9_V_1_reg_2206_pp0_iter2_reg;
wire   [17:0] grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_return;
reg  signed [17:0] p_Val2_19_reg_2213;
reg  signed [17:0] p_Val2_1_reg_2219;
reg   [0:0] p_Result_20_reg_2225;
reg   [0:0] p_Result_21_reg_2232;
reg   [9:0] tmp_20_reg_2239;
reg   [17:0] inv_exp_sum_V_reg_2250;
wire  signed [25:0] sext_ln242_fu_1857_p1;
reg  signed [25:0] sext_ln242_reg_2255;
reg   [15:0] tmp_data_0_V_reg_2260;
reg   [15:0] tmp_data_1_V_reg_2265;
reg   [15:0] tmp_data_2_V_reg_2270;
reg   [15:0] tmp_data_3_V_reg_2275;
reg   [15:0] tmp_data_4_V_reg_2280;
reg   [15:0] tmp_data_5_V_reg_2285;
reg   [15:0] tmp_data_6_V_reg_2290;
reg   [15:0] tmp_data_7_V_reg_2295;
reg   [15:0] tmp_data_8_V_reg_2300;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage0_subdone;
wire    grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_start;
wire    grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_done;
wire    grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_idle;
wire    grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_ready;
reg   [4:0] grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_x_V_offset;
reg    grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_ce;
wire    ap_block_state5_pp0_stage4_iter0_ignore_call233;
wire    ap_block_state15_pp0_stage4_iter1_ignore_call233;
wire    ap_block_state25_pp0_stage4_iter2_ignore_call233;
wire    ap_block_pp0_stage4_11001_ignoreCallOp252;
wire    ap_block_state6_pp0_stage5_iter0_ignore_call233;
wire    ap_block_state16_pp0_stage5_iter1_ignore_call233;
wire    ap_block_state26_pp0_stage5_iter2_ignore_call233;
wire    ap_block_pp0_stage5_11001_ignoreCallOp253;
wire    ap_block_state7_pp0_stage6_iter0_ignore_call234;
wire    ap_block_state17_pp0_stage6_iter1_ignore_call234;
wire    ap_block_state27_pp0_stage6_iter2_ignore_call234;
wire    ap_block_pp0_stage6_11001_ignoreCallOp254;
wire    ap_block_state8_pp0_stage7_iter0_ignore_call234;
wire    ap_block_state18_pp0_stage7_iter1_ignore_call234;
wire    ap_block_state28_pp0_stage7_iter2_ignore_call234;
wire    ap_block_pp0_stage7_11001_ignoreCallOp255;
reg    grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_start_reg;
reg   [16:0] exp_res_0_V_fu_250;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage6;
reg   [16:0] exp_res_1_V_fu_254;
reg   [16:0] exp_res_2_V_fu_258;
reg   [16:0] exp_res_3_V_fu_262;
reg   [16:0] exp_res_4_V_fu_266;
reg   [16:0] exp_res_5_V_fu_270;
reg   [16:0] exp_res_6_V_fu_274;
reg   [16:0] exp_res_7_V_fu_278;
reg   [16:0] exp_res_8_V_fu_282;
reg   [16:0] exp_res_9_V_fu_286;
wire   [63:0] zext_ln230_fu_1552_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln230_1_fu_1556_p1;
wire   [63:0] zext_ln230_2_fu_1560_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln230_3_fu_1564_p1;
wire   [63:0] zext_ln230_4_fu_1568_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln230_5_fu_1593_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln230_6_fu_1602_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln230_7_fu_1611_p1;
wire   [63:0] zext_ln230_8_fu_1620_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln230_9_fu_1629_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln238_fu_1852_p1;
reg    ap_block_pp0_stage0_01001;
reg   [16:0] grp_fu_446_p0;
wire   [25:0] zext_ln1118_fu_1861_p1;
wire   [25:0] zext_ln1118_1_fu_1865_p1;
wire   [25:0] zext_ln1118_2_fu_1869_p1;
wire   [25:0] zext_ln1118_3_fu_1873_p1;
wire   [25:0] zext_ln1118_4_fu_1877_p1;
wire   [25:0] zext_ln1118_5_fu_1881_p1;
wire   [25:0] zext_ln1118_6_fu_1885_p1;
wire   [25:0] zext_ln1118_7_fu_1889_p1;
wire   [25:0] zext_ln1118_8_fu_1893_p1;
wire   [25:0] zext_ln1118_9_fu_1897_p1;
reg  signed [17:0] grp_fu_446_p1;
wire   [25:0] grp_fu_446_p2;
wire  signed [15:0] icmp_ln1496_fu_552_p0;
wire  signed [15:0] icmp_ln1496_fu_552_p1;
wire  signed [15:0] icmp_ln1496_1_fu_558_p0;
wire  signed [15:0] icmp_ln1496_1_fu_558_p1;
wire  signed [15:0] icmp_ln1496_3_fu_564_p0;
wire  signed [15:0] icmp_ln1496_3_fu_564_p1;
wire  signed [15:0] icmp_ln1496_4_fu_570_p0;
wire  signed [15:0] icmp_ln1496_4_fu_570_p1;
wire   [15:0] select_ln86_fu_576_p3;
wire   [15:0] select_ln86_1_fu_581_p3;
wire   [0:0] icmp_ln1496_2_fu_586_p2;
wire   [15:0] select_ln86_3_fu_600_p3;
wire   [15:0] select_ln86_4_fu_605_p3;
wire   [0:0] icmp_ln1496_5_fu_610_p2;
wire   [15:0] select_ln86_2_fu_592_p3;
wire   [15:0] select_ln86_5_fu_616_p3;
wire   [0:0] icmp_ln1496_6_fu_624_p2;
wire   [0:0] icmp_ln1496_7_fu_638_p2;
wire   [0:0] icmp_ln1496_8_fu_648_p2;
wire   [15:0] x_max_V_fu_652_p3;
wire  signed [16:0] sext_ln703_fu_658_p1;
wire  signed [16:0] sext_ln703_1_fu_661_p1;
wire   [16:0] sub_ln1193_fu_665_p2;
wire   [0:0] tmp_22_fu_679_p3;
wire   [0:0] tmp_21_fu_671_p3;
wire   [0:0] xor_ln786_fu_687_p2;
wire   [0:0] xor_ln340_fu_705_p2;
wire  signed [16:0] sext_ln703_2_fu_717_p1;
wire   [16:0] sub_ln1193_1_fu_720_p2;
wire   [0:0] tmp_24_fu_734_p3;
wire   [0:0] tmp_23_fu_726_p3;
wire   [0:0] xor_ln786_1_fu_742_p2;
wire   [0:0] xor_ln340_1_fu_760_p2;
wire  signed [16:0] sext_ln703_3_fu_772_p1;
wire   [16:0] sub_ln1193_2_fu_775_p2;
wire   [0:0] tmp_26_fu_789_p3;
wire   [0:0] tmp_25_fu_781_p3;
wire   [0:0] xor_ln786_2_fu_797_p2;
wire   [0:0] xor_ln340_2_fu_815_p2;
wire  signed [16:0] sext_ln703_4_fu_827_p1;
wire   [16:0] sub_ln1193_3_fu_830_p2;
wire   [0:0] tmp_28_fu_844_p3;
wire   [0:0] tmp_27_fu_836_p3;
wire   [0:0] xor_ln786_3_fu_852_p2;
wire   [0:0] xor_ln340_3_fu_870_p2;
wire  signed [16:0] sext_ln703_5_fu_882_p1;
wire   [16:0] sub_ln1193_4_fu_885_p2;
wire   [0:0] tmp_30_fu_899_p3;
wire   [0:0] tmp_29_fu_891_p3;
wire   [0:0] xor_ln786_4_fu_907_p2;
wire   [0:0] xor_ln340_4_fu_925_p2;
wire  signed [16:0] sext_ln703_6_fu_937_p1;
wire   [16:0] sub_ln1193_5_fu_940_p2;
wire   [0:0] tmp_32_fu_954_p3;
wire   [0:0] tmp_31_fu_946_p3;
wire   [0:0] xor_ln786_5_fu_962_p2;
wire   [0:0] xor_ln340_5_fu_980_p2;
wire  signed [16:0] sext_ln703_7_fu_992_p1;
wire   [16:0] sub_ln1193_6_fu_995_p2;
wire   [0:0] tmp_34_fu_1009_p3;
wire   [0:0] tmp_33_fu_1001_p3;
wire   [0:0] xor_ln786_6_fu_1017_p2;
wire   [0:0] xor_ln340_6_fu_1035_p2;
wire  signed [16:0] sext_ln703_8_fu_1047_p1;
wire   [16:0] sub_ln1193_7_fu_1050_p2;
wire   [0:0] tmp_36_fu_1064_p3;
wire   [0:0] tmp_35_fu_1056_p3;
wire   [0:0] xor_ln786_7_fu_1072_p2;
wire   [0:0] xor_ln340_7_fu_1090_p2;
wire  signed [16:0] sext_ln703_9_fu_1102_p1;
wire   [16:0] sub_ln1193_8_fu_1105_p2;
wire   [0:0] tmp_38_fu_1119_p3;
wire   [0:0] tmp_37_fu_1111_p3;
wire   [0:0] xor_ln786_8_fu_1127_p2;
wire   [0:0] xor_ln340_8_fu_1145_p2;
wire  signed [16:0] sext_ln703_10_fu_1157_p1;
wire   [16:0] sub_ln1193_9_fu_1160_p2;
wire   [0:0] tmp_40_fu_1174_p3;
wire   [0:0] tmp_39_fu_1166_p3;
wire   [0:0] xor_ln786_9_fu_1182_p2;
wire   [0:0] xor_ln340_9_fu_1200_p2;
wire   [0:0] xor_ln340_10_fu_699_p2;
wire   [9:0] tmp_fu_1212_p4;
wire   [0:0] and_ln786_fu_693_p2;
wire   [0:0] or_ln340_fu_711_p2;
wire   [9:0] select_ln340_fu_1222_p3;
wire   [9:0] select_ln388_fu_1230_p3;
wire   [0:0] xor_ln340_11_fu_754_p2;
wire   [9:0] tmp_11_fu_1246_p4;
wire   [0:0] and_ln786_1_fu_748_p2;
wire   [0:0] or_ln340_1_fu_766_p2;
wire   [9:0] select_ln340_2_fu_1256_p3;
wire   [9:0] select_ln388_1_fu_1264_p3;
wire   [0:0] xor_ln340_12_fu_809_p2;
wire   [9:0] tmp_12_fu_1280_p4;
wire   [0:0] and_ln786_2_fu_803_p2;
wire   [0:0] or_ln340_2_fu_821_p2;
wire   [9:0] select_ln340_4_fu_1290_p3;
wire   [9:0] select_ln388_2_fu_1298_p3;
wire   [0:0] xor_ln340_13_fu_864_p2;
wire   [9:0] tmp_13_fu_1314_p4;
wire   [0:0] and_ln786_3_fu_858_p2;
wire   [0:0] or_ln340_3_fu_876_p2;
wire   [9:0] select_ln340_6_fu_1324_p3;
wire   [9:0] select_ln388_3_fu_1332_p3;
wire   [0:0] xor_ln340_14_fu_919_p2;
wire   [9:0] tmp_14_fu_1348_p4;
wire   [0:0] and_ln786_4_fu_913_p2;
wire   [0:0] or_ln340_4_fu_931_p2;
wire   [9:0] select_ln340_8_fu_1358_p3;
wire   [9:0] select_ln388_4_fu_1366_p3;
wire   [0:0] xor_ln340_15_fu_974_p2;
wire   [9:0] tmp_15_fu_1382_p4;
wire   [0:0] and_ln786_5_fu_968_p2;
wire   [0:0] or_ln340_5_fu_986_p2;
wire   [9:0] select_ln340_10_fu_1392_p3;
wire   [9:0] select_ln388_5_fu_1400_p3;
wire   [0:0] xor_ln340_16_fu_1029_p2;
wire   [9:0] tmp_16_fu_1416_p4;
wire   [0:0] and_ln786_6_fu_1023_p2;
wire   [0:0] or_ln340_6_fu_1041_p2;
wire   [9:0] select_ln340_12_fu_1426_p3;
wire   [9:0] select_ln388_6_fu_1434_p3;
wire   [0:0] xor_ln340_17_fu_1084_p2;
wire   [9:0] tmp_17_fu_1450_p4;
wire   [0:0] and_ln786_7_fu_1078_p2;
wire   [0:0] or_ln340_7_fu_1096_p2;
wire   [9:0] select_ln340_14_fu_1460_p3;
wire   [9:0] select_ln388_7_fu_1468_p3;
wire   [0:0] xor_ln340_18_fu_1139_p2;
wire   [9:0] tmp_18_fu_1484_p4;
wire   [0:0] and_ln786_8_fu_1133_p2;
wire   [0:0] or_ln340_8_fu_1151_p2;
wire   [9:0] select_ln340_16_fu_1494_p3;
wire   [9:0] select_ln388_8_fu_1502_p3;
wire   [0:0] xor_ln340_19_fu_1194_p2;
wire   [9:0] tmp_19_fu_1518_p4;
wire   [0:0] and_ln786_9_fu_1188_p2;
wire   [0:0] or_ln340_9_fu_1206_p2;
wire   [9:0] select_ln340_18_fu_1528_p3;
wire   [9:0] select_ln388_9_fu_1536_p3;
wire  signed [18:0] lhs_V_fu_1638_p1;
wire  signed [18:0] rhs_V_fu_1641_p1;
wire   [18:0] ret_V_fu_1644_p2;
wire   [17:0] p_Val2_22_fu_1658_p2;
wire   [0:0] p_Result_18_fu_1662_p3;
wire   [0:0] p_Result_s_fu_1650_p3;
wire   [0:0] xor_ln786_10_fu_1670_p2;
wire   [0:0] xor_ln340_21_fu_1688_p2;
wire   [0:0] xor_ln340_20_fu_1682_p2;
wire   [0:0] underflow_fu_1676_p2;
wire   [0:0] or_ln340_10_fu_1694_p2;
wire   [17:0] select_ln340_20_fu_1700_p3;
wire   [17:0] select_ln388_10_fu_1708_p3;
wire   [17:0] p_Val2_24_fu_1727_p1;
wire   [17:0] p_Val2_23_fu_1724_p1;
wire   [17:0] p_Val2_25_fu_1730_p2;
wire   [0:0] p_Result_19_fu_1740_p3;
wire   [16:0] add_ln746_fu_1736_p2;
wire   [16:0] p_Val2_27_fu_1748_p3;
wire  signed [17:0] p_Val2_26_fu_1716_p3;
wire  signed [18:0] lhs_V_1_fu_1760_p1;
wire   [18:0] rhs_V_1_fu_1764_p1;
wire   [18:0] ret_V_1_fu_1768_p2;
wire   [17:0] zext_ln746_fu_1756_p1;
wire   [17:0] p_Val2_29_fu_1782_p2;
wire   [0:0] xor_ln786_11_fu_1806_p2;
wire   [0:0] xor_ln340_23_fu_1820_p2;
wire   [0:0] xor_ln340_22_fu_1816_p2;
wire   [0:0] underflow_1_fu_1811_p2;
wire   [0:0] or_ln340_11_fu_1825_p2;
wire   [9:0] select_ln340_22_fu_1830_p3;
wire   [9:0] select_ln388_11_fu_1837_p3;
wire   [9:0] y_V_10_fu_1844_p3;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to3;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_start_reg = 1'b0;
end

softmax_stable_array_array_softmax_config28_s_exp_table5 #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table5_address0),
    .ce0(exp_table5_ce0),
    .q0(exp_table5_q0)
);

softmax_stable_array_array_softmax_config28_s_invert_table6 #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table6_address0),
    .ce0(invert_table6_ce0),
    .q0(invert_table6_q0)
);

reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_start),
    .ap_done(grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_done),
    .ap_idle(grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_idle),
    .ap_ready(grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_ready),
    .x_0_V(exp_res_0_V_fu_250),
    .x_1_V(exp_res_1_V_fu_254),
    .x_2_V(exp_res_2_V_fu_258),
    .x_3_V(exp_res_3_V_fu_262),
    .x_4_V(exp_res_4_V_fu_266),
    .x_5_V(exp_res_5_V_fu_270),
    .x_6_V(exp_res_6_V_fu_274),
    .x_7_V(exp_res_7_V_fu_278),
    .x_8_V(exp_res_8_V_fu_282),
    .x_9_V(exp_res_9_V_fu_286),
    .x_V_offset(grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_x_V_offset),
    .ap_return(grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_return),
    .ap_ce(grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_start_reg <= 1'b1;
        end else if ((grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_ready == 1'b1)) begin
            grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_array_0_V_reg_1961 <= data_V_data_0_V_dout;
        data_array_1_V_reg_1967 <= data_V_data_1_V_dout;
        data_array_2_V_reg_1973 <= data_V_data_2_V_dout;
        data_array_3_V_reg_1979 <= data_V_data_3_V_dout;
        data_array_4_V_reg_1985 <= data_V_data_4_V_dout;
        data_array_5_V_reg_1991 <= data_V_data_5_V_dout;
        data_array_6_V_reg_1997 <= data_V_data_6_V_dout;
        data_array_7_V_reg_2003 <= data_V_data_7_V_dout;
        data_array_8_V_reg_2009 <= data_V_data_8_V_dout;
        data_array_9_V_reg_2016 <= data_V_data_9_V_dout;
        exp_res_6_V_1_reg_2174_pp0_iter2_reg <= exp_res_6_V_1_reg_2174;
        icmp_ln1496_1_reg_2028 <= icmp_ln1496_1_fu_558_p2;
        icmp_ln1496_3_reg_2033 <= icmp_ln1496_3_fu_564_p2;
        icmp_ln1496_4_reg_2038 <= icmp_ln1496_4_fu_570_p2;
        icmp_ln1496_reg_2023 <= icmp_ln1496_fu_552_p2;
        inv_exp_sum_V_reg_2250 <= invert_table6_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_0_V_1_reg_2110 <= exp_table5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        exp_res_0_V_1_reg_2110_pp0_iter1_reg <= exp_res_0_V_1_reg_2110;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_0_V_fu_250 <= exp_res_0_V_1_reg_2110;
        exp_res_1_V_fu_254 <= exp_res_1_V_1_reg_2121;
        exp_res_2_V_fu_258 <= exp_res_2_V_1_reg_2132;
        exp_res_3_V_fu_262 <= exp_res_3_V_1_reg_2143;
        exp_res_4_V_1_reg_2154 <= exp_table5_q0;
        exp_res_4_V_fu_266 <= exp_table5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_1_V_1_reg_2121 <= exp_table5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        exp_res_1_V_1_reg_2121_pp0_iter1_reg <= exp_res_1_V_1_reg_2121;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_2_V_1_reg_2132 <= exp_table5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        exp_res_2_V_1_reg_2132_pp0_iter1_reg <= exp_res_2_V_1_reg_2132;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_3_V_1_reg_2143 <= exp_table5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        exp_res_3_V_1_reg_2143_pp0_iter1_reg <= exp_res_3_V_1_reg_2143;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        exp_res_4_V_1_reg_2154_pp0_iter1_reg <= exp_res_4_V_1_reg_2154;
        p_Result_20_reg_2225 <= ret_V_1_fu_1768_p2[32'd18];
        p_Result_21_reg_2232 <= p_Val2_29_fu_1782_p2[32'd17];
        tmp_20_reg_2239 <= {{p_Val2_29_fu_1782_p2[17:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_5_V_1_reg_2164 <= exp_table5_q0;
        exp_res_5_V_fu_270 <= exp_table5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        exp_res_5_V_1_reg_2164_pp0_iter1_reg <= exp_res_5_V_1_reg_2164;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_res_6_V_1_reg_2174 <= exp_table5_q0;
        exp_res_6_V_fu_274 <= exp_table5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_res_7_V_1_reg_2184 <= exp_table5_q0;
        exp_res_7_V_fu_278 <= exp_table5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_res_7_V_1_reg_2184_pp0_iter2_reg <= exp_res_7_V_1_reg_2184;
        select_ln86_6_reg_2043 <= select_ln86_6_fu_630_p3;
        select_ln86_7_reg_2049 <= select_ln86_7_fu_642_p3;
        sext_ln242_reg_2255 <= sext_ln242_fu_1857_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_res_8_V_1_reg_2194 <= exp_table5_q0;
        exp_res_8_V_fu_282 <= exp_table5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_res_8_V_1_reg_2194_pp0_iter2_reg <= exp_res_8_V_1_reg_2194;
        y_V_1_reg_2060 <= y_V_1_fu_1272_p3;
        y_V_2_reg_2065 <= y_V_2_fu_1306_p3;
        y_V_3_reg_2070 <= y_V_3_fu_1340_p3;
        y_V_4_reg_2075 <= y_V_4_fu_1374_p3;
        y_V_5_reg_2080 <= y_V_5_fu_1408_p3;
        y_V_6_reg_2085 <= y_V_6_fu_1442_p3;
        y_V_7_reg_2090 <= y_V_7_fu_1476_p3;
        y_V_8_reg_2095 <= y_V_8_fu_1510_p3;
        y_V_9_reg_2100 <= y_V_9_fu_1544_p3;
        y_V_reg_2055 <= y_V_fu_1238_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        exp_res_9_V_1_reg_2206 <= exp_table5_q0;
        exp_res_9_V_fu_286 <= exp_table5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        exp_res_9_V_1_reg_2206_pp0_iter2_reg <= exp_res_9_V_1_reg_2206;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        p_Val2_19_reg_2213 <= grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        p_Val2_1_reg_2219 <= grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_data_0_V_reg_2260 <= {{grp_fu_446_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_data_1_V_reg_2265 <= {{grp_fu_446_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_data_2_V_reg_2270 <= {{grp_fu_446_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_data_3_V_reg_2275 <= {{grp_fu_446_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_data_4_V_reg_2280 <= {{grp_fu_446_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_data_5_V_reg_2285 <= {{grp_fu_446_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_data_6_V_reg_2290 <= {{grp_fu_446_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        tmp_data_7_V_reg_2295 <= {{grp_fu_446_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_data_8_V_reg_2300 <= {{grp_fu_446_p2[25:10]}};
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_4_V_blk_n = data_V_data_4_V_empty_n;
    end else begin
        data_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_4_V_read = 1'b1;
    end else begin
        data_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_5_V_blk_n = data_V_data_5_V_empty_n;
    end else begin
        data_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_5_V_read = 1'b1;
    end else begin
        data_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_6_V_blk_n = data_V_data_6_V_empty_n;
    end else begin
        data_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_6_V_read = 1'b1;
    end else begin
        data_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_7_V_blk_n = data_V_data_7_V_empty_n;
    end else begin
        data_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_7_V_read = 1'b1;
    end else begin
        data_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_8_V_blk_n = data_V_data_8_V_empty_n;
    end else begin
        data_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_8_V_read = 1'b1;
    end else begin
        data_V_data_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_9_V_blk_n = data_V_data_9_V_empty_n;
    end else begin
        data_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_9_V_read = 1'b1;
    end else begin
        data_V_data_9_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_table5_address0 = zext_ln230_9_fu_1629_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_table5_address0 = zext_ln230_8_fu_1620_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table5_address0 = zext_ln230_7_fu_1611_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table5_address0 = zext_ln230_6_fu_1602_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table5_address0 = zext_ln230_5_fu_1593_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table5_address0 = zext_ln230_4_fu_1568_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table5_address0 = zext_ln230_3_fu_1564_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table5_address0 = zext_ln230_2_fu_1560_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table5_address0 = zext_ln230_1_fu_1556_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table5_address0 = zext_ln230_fu_1552_p1;
    end else begin
        exp_table5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        exp_table5_ce0 = 1'b1;
    end else begin
        exp_table5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_446_p0 = zext_ln1118_9_fu_1897_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_446_p0 = zext_ln1118_8_fu_1893_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_446_p0 = zext_ln1118_7_fu_1889_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_446_p0 = zext_ln1118_6_fu_1885_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_446_p0 = zext_ln1118_5_fu_1881_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_446_p0 = zext_ln1118_4_fu_1877_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_446_p0 = zext_ln1118_3_fu_1873_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_446_p0 = zext_ln1118_2_fu_1869_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_446_p0 = zext_ln1118_1_fu_1865_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_446_p0 = zext_ln1118_fu_1861_p1;
    end else begin
        grp_fu_446_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_446_p1 = sext_ln242_reg_2255;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_446_p1 = sext_ln242_fu_1857_p1;
    end else begin
        grp_fu_446_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp255) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001_ignoreCallOp254) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp253) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp252) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_ce = 1'b1;
    end else begin
        grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_x_V_offset = 5'd4;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_x_V_offset = 5'd0;
        end else begin
            grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_x_V_offset = 'bx;
        end
    end else begin
        grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_x_V_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        invert_table6_ce0 = 1'b1;
    end else begin
        invert_table6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_V_data_0_V_TDATA_blk_n = res_V_data_0_V_TREADY;
    end else begin
        res_V_data_0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_0_V_TVALID = 1'b1;
    end else begin
        res_V_data_0_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_V_data_1_V_TDATA_blk_n = res_V_data_1_V_TREADY;
    end else begin
        res_V_data_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_1_V_TVALID = 1'b1;
    end else begin
        res_V_data_1_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_V_data_2_V_TDATA_blk_n = res_V_data_2_V_TREADY;
    end else begin
        res_V_data_2_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_2_V_TVALID = 1'b1;
    end else begin
        res_V_data_2_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_V_data_3_V_TDATA_blk_n = res_V_data_3_V_TREADY;
    end else begin
        res_V_data_3_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_3_V_TVALID = 1'b1;
    end else begin
        res_V_data_3_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_V_data_4_V_TDATA_blk_n = res_V_data_4_V_TREADY;
    end else begin
        res_V_data_4_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_4_V_TVALID = 1'b1;
    end else begin
        res_V_data_4_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_V_data_5_V_TDATA_blk_n = res_V_data_5_V_TREADY;
    end else begin
        res_V_data_5_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_5_V_TVALID = 1'b1;
    end else begin
        res_V_data_5_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_V_data_6_V_TDATA_blk_n = res_V_data_6_V_TREADY;
    end else begin
        res_V_data_6_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_6_V_TVALID = 1'b1;
    end else begin
        res_V_data_6_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_V_data_7_V_TDATA_blk_n = res_V_data_7_V_TREADY;
    end else begin
        res_V_data_7_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_7_V_TVALID = 1'b1;
    end else begin
        res_V_data_7_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_V_data_8_V_TDATA_blk_n = res_V_data_8_V_TREADY;
    end else begin
        res_V_data_8_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_8_V_TVALID = 1'b1;
    end else begin
        res_V_data_8_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_V_data_9_V_TDATA_blk_n = res_V_data_9_V_TREADY;
    end else begin
        res_V_data_9_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_9_V_TVALID = 1'b1;
    end else begin
        res_V_data_9_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln746_fu_1736_p2 = (exp_res_8_V_1_reg_2194 + exp_res_9_V_1_reg_2206);

assign and_ln786_1_fu_748_p2 = (xor_ln786_1_fu_742_p2 & tmp_23_fu_726_p3);

assign and_ln786_2_fu_803_p2 = (xor_ln786_2_fu_797_p2 & tmp_25_fu_781_p3);

assign and_ln786_3_fu_858_p2 = (xor_ln786_3_fu_852_p2 & tmp_27_fu_836_p3);

assign and_ln786_4_fu_913_p2 = (xor_ln786_4_fu_907_p2 & tmp_29_fu_891_p3);

assign and_ln786_5_fu_968_p2 = (xor_ln786_5_fu_962_p2 & tmp_31_fu_946_p3);

assign and_ln786_6_fu_1023_p2 = (xor_ln786_6_fu_1017_p2 & tmp_33_fu_1001_p3);

assign and_ln786_7_fu_1078_p2 = (xor_ln786_7_fu_1072_p2 & tmp_35_fu_1056_p3);

assign and_ln786_8_fu_1133_p2 = (xor_ln786_8_fu_1127_p2 & tmp_37_fu_1111_p3);

assign and_ln786_9_fu_1188_p2 = (xor_ln786_9_fu_1182_p2 & tmp_39_fu_1166_p3);

assign and_ln786_fu_693_p2 = (xor_ln786_fu_687_p2 & tmp_21_fu_671_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((io_acc_block_signal_op42 == 1'b0) | (ap_start == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & ((io_acc_block_signal_op42 == 1'b0) | (ap_start == 1'b0))) | ((res_V_data_0_V_TREADY == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & ((io_acc_block_signal_op42 == 1'b0) | (ap_start == 1'b0))) | ((res_V_data_0_V_TREADY == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001_ignoreCallOp252 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001_ignoreCallOp253 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001_ignoreCallOp254 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001_ignoreCallOp255 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter1_ignore_call233 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage5_iter1_ignore_call233 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage6_iter1_ignore_call234 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage7_iter1_ignore_call234 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((io_acc_block_signal_op42 == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state20_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage4_iter2_ignore_call233 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage5_iter2_ignore_call233 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage6_iter2_ignore_call234 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage7_iter2_ignore_call234 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0_ignore_call233 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0_ignore_call233 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0_ignore_call234 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0_ignore_call234 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_446_p2 = ($signed({{1'b0}, {grp_fu_446_p0}}) * $signed(grp_fu_446_p1));

assign grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_start = grp_reduce_ap_fixed_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_484_ap_start_reg;

assign icmp_ln1496_1_fu_558_p0 = data_V_data_2_V_dout;

assign icmp_ln1496_1_fu_558_p1 = data_V_data_3_V_dout;

assign icmp_ln1496_1_fu_558_p2 = (($signed(icmp_ln1496_1_fu_558_p0) < $signed(icmp_ln1496_1_fu_558_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_2_fu_586_p2 = (($signed(select_ln86_fu_576_p3) < $signed(select_ln86_1_fu_581_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_3_fu_564_p0 = data_V_data_4_V_dout;

assign icmp_ln1496_3_fu_564_p1 = data_V_data_5_V_dout;

assign icmp_ln1496_3_fu_564_p2 = (($signed(icmp_ln1496_3_fu_564_p0) < $signed(icmp_ln1496_3_fu_564_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_4_fu_570_p0 = data_V_data_6_V_dout;

assign icmp_ln1496_4_fu_570_p1 = data_V_data_7_V_dout;

assign icmp_ln1496_4_fu_570_p2 = (($signed(icmp_ln1496_4_fu_570_p0) < $signed(icmp_ln1496_4_fu_570_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_5_fu_610_p2 = (($signed(select_ln86_3_fu_600_p3) < $signed(select_ln86_4_fu_605_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_6_fu_624_p2 = (($signed(select_ln86_2_fu_592_p3) < $signed(select_ln86_5_fu_616_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_7_fu_638_p2 = (($signed(data_array_8_V_reg_2009) < $signed(data_array_9_V_reg_2016)) ? 1'b1 : 1'b0);

assign icmp_ln1496_8_fu_648_p2 = (($signed(select_ln86_6_reg_2043) < $signed(select_ln86_7_reg_2049)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_552_p0 = data_V_data_0_V_dout;

assign icmp_ln1496_fu_552_p1 = data_V_data_1_V_dout;

assign icmp_ln1496_fu_552_p2 = (($signed(icmp_ln1496_fu_552_p0) < $signed(icmp_ln1496_fu_552_p1)) ? 1'b1 : 1'b0);

assign invert_table6_address0 = zext_ln238_fu_1852_p1;

assign io_acc_block_signal_op42 = (data_V_data_9_V_empty_n & data_V_data_8_V_empty_n & data_V_data_7_V_empty_n & data_V_data_6_V_empty_n & data_V_data_5_V_empty_n & data_V_data_4_V_empty_n & data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_0_V_empty_n);

assign lhs_V_1_fu_1760_p1 = p_Val2_26_fu_1716_p3;

assign lhs_V_fu_1638_p1 = p_Val2_19_reg_2213;

assign or_ln340_10_fu_1694_p2 = (xor_ln340_21_fu_1688_p2 | p_Result_18_fu_1662_p3);

assign or_ln340_11_fu_1825_p2 = (xor_ln340_23_fu_1820_p2 | p_Result_21_reg_2232);

assign or_ln340_1_fu_766_p2 = (xor_ln340_1_fu_760_p2 | tmp_24_fu_734_p3);

assign or_ln340_2_fu_821_p2 = (xor_ln340_2_fu_815_p2 | tmp_26_fu_789_p3);

assign or_ln340_3_fu_876_p2 = (xor_ln340_3_fu_870_p2 | tmp_28_fu_844_p3);

assign or_ln340_4_fu_931_p2 = (xor_ln340_4_fu_925_p2 | tmp_30_fu_899_p3);

assign or_ln340_5_fu_986_p2 = (xor_ln340_5_fu_980_p2 | tmp_32_fu_954_p3);

assign or_ln340_6_fu_1041_p2 = (xor_ln340_6_fu_1035_p2 | tmp_34_fu_1009_p3);

assign or_ln340_7_fu_1096_p2 = (xor_ln340_7_fu_1090_p2 | tmp_36_fu_1064_p3);

assign or_ln340_8_fu_1151_p2 = (xor_ln340_8_fu_1145_p2 | tmp_38_fu_1119_p3);

assign or_ln340_9_fu_1206_p2 = (xor_ln340_9_fu_1200_p2 | tmp_40_fu_1174_p3);

assign or_ln340_fu_711_p2 = (xor_ln340_fu_705_p2 | tmp_22_fu_679_p3);

assign p_Result_18_fu_1662_p3 = p_Val2_22_fu_1658_p2[32'd17];

assign p_Result_19_fu_1740_p3 = p_Val2_25_fu_1730_p2[32'd17];

assign p_Result_s_fu_1650_p3 = ret_V_fu_1644_p2[32'd18];

assign p_Val2_22_fu_1658_p2 = ($signed(p_Val2_1_reg_2219) + $signed(p_Val2_19_reg_2213));

assign p_Val2_23_fu_1724_p1 = exp_res_8_V_1_reg_2194;

assign p_Val2_24_fu_1727_p1 = exp_res_9_V_1_reg_2206;

assign p_Val2_25_fu_1730_p2 = (p_Val2_24_fu_1727_p1 + p_Val2_23_fu_1724_p1);

assign p_Val2_26_fu_1716_p3 = ((or_ln340_10_fu_1694_p2[0:0] === 1'b1) ? select_ln340_20_fu_1700_p3 : select_ln388_10_fu_1708_p3);

assign p_Val2_27_fu_1748_p3 = ((p_Result_19_fu_1740_p3[0:0] === 1'b1) ? 17'd131071 : add_ln746_fu_1736_p2);

assign p_Val2_29_fu_1782_p2 = ($signed(zext_ln746_fu_1756_p1) + $signed(p_Val2_26_fu_1716_p3));

assign res_V_data_0_V_TDATA = tmp_data_0_V_reg_2260;

assign res_V_data_1_V_TDATA = tmp_data_1_V_reg_2265;

assign res_V_data_2_V_TDATA = tmp_data_2_V_reg_2270;

assign res_V_data_3_V_TDATA = tmp_data_3_V_reg_2275;

assign res_V_data_4_V_TDATA = tmp_data_4_V_reg_2280;

assign res_V_data_5_V_TDATA = tmp_data_5_V_reg_2285;

assign res_V_data_6_V_TDATA = tmp_data_6_V_reg_2290;

assign res_V_data_7_V_TDATA = tmp_data_7_V_reg_2295;

assign res_V_data_8_V_TDATA = tmp_data_8_V_reg_2300;

assign res_V_data_9_V_TDATA = {{grp_fu_446_p2[25:10]}};

assign ret_V_1_fu_1768_p2 = ($signed(lhs_V_1_fu_1760_p1) + $signed(rhs_V_1_fu_1764_p1));

assign ret_V_fu_1644_p2 = ($signed(lhs_V_fu_1638_p1) + $signed(rhs_V_fu_1641_p1));

assign rhs_V_1_fu_1764_p1 = p_Val2_27_fu_1748_p3;

assign rhs_V_fu_1641_p1 = p_Val2_1_reg_2219;

assign select_ln340_10_fu_1392_p3 = ((xor_ln340_15_fu_974_p2[0:0] === 1'b1) ? 10'd511 : tmp_15_fu_1382_p4);

assign select_ln340_12_fu_1426_p3 = ((xor_ln340_16_fu_1029_p2[0:0] === 1'b1) ? 10'd511 : tmp_16_fu_1416_p4);

assign select_ln340_14_fu_1460_p3 = ((xor_ln340_17_fu_1084_p2[0:0] === 1'b1) ? 10'd511 : tmp_17_fu_1450_p4);

assign select_ln340_16_fu_1494_p3 = ((xor_ln340_18_fu_1139_p2[0:0] === 1'b1) ? 10'd511 : tmp_18_fu_1484_p4);

assign select_ln340_18_fu_1528_p3 = ((xor_ln340_19_fu_1194_p2[0:0] === 1'b1) ? 10'd511 : tmp_19_fu_1518_p4);

assign select_ln340_20_fu_1700_p3 = ((xor_ln340_20_fu_1682_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_22_fu_1658_p2);

assign select_ln340_22_fu_1830_p3 = ((xor_ln340_22_fu_1816_p2[0:0] === 1'b1) ? 10'd511 : tmp_20_reg_2239);

assign select_ln340_2_fu_1256_p3 = ((xor_ln340_11_fu_754_p2[0:0] === 1'b1) ? 10'd511 : tmp_11_fu_1246_p4);

assign select_ln340_4_fu_1290_p3 = ((xor_ln340_12_fu_809_p2[0:0] === 1'b1) ? 10'd511 : tmp_12_fu_1280_p4);

assign select_ln340_6_fu_1324_p3 = ((xor_ln340_13_fu_864_p2[0:0] === 1'b1) ? 10'd511 : tmp_13_fu_1314_p4);

assign select_ln340_8_fu_1358_p3 = ((xor_ln340_14_fu_919_p2[0:0] === 1'b1) ? 10'd511 : tmp_14_fu_1348_p4);

assign select_ln340_fu_1222_p3 = ((xor_ln340_10_fu_699_p2[0:0] === 1'b1) ? 10'd511 : tmp_fu_1212_p4);

assign select_ln388_10_fu_1708_p3 = ((underflow_fu_1676_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_22_fu_1658_p2);

assign select_ln388_11_fu_1837_p3 = ((underflow_1_fu_1811_p2[0:0] === 1'b1) ? 10'd512 : tmp_20_reg_2239);

assign select_ln388_1_fu_1264_p3 = ((and_ln786_1_fu_748_p2[0:0] === 1'b1) ? 10'd512 : tmp_11_fu_1246_p4);

assign select_ln388_2_fu_1298_p3 = ((and_ln786_2_fu_803_p2[0:0] === 1'b1) ? 10'd512 : tmp_12_fu_1280_p4);

assign select_ln388_3_fu_1332_p3 = ((and_ln786_3_fu_858_p2[0:0] === 1'b1) ? 10'd512 : tmp_13_fu_1314_p4);

assign select_ln388_4_fu_1366_p3 = ((and_ln786_4_fu_913_p2[0:0] === 1'b1) ? 10'd512 : tmp_14_fu_1348_p4);

assign select_ln388_5_fu_1400_p3 = ((and_ln786_5_fu_968_p2[0:0] === 1'b1) ? 10'd512 : tmp_15_fu_1382_p4);

assign select_ln388_6_fu_1434_p3 = ((and_ln786_6_fu_1023_p2[0:0] === 1'b1) ? 10'd512 : tmp_16_fu_1416_p4);

assign select_ln388_7_fu_1468_p3 = ((and_ln786_7_fu_1078_p2[0:0] === 1'b1) ? 10'd512 : tmp_17_fu_1450_p4);

assign select_ln388_8_fu_1502_p3 = ((and_ln786_8_fu_1133_p2[0:0] === 1'b1) ? 10'd512 : tmp_18_fu_1484_p4);

assign select_ln388_9_fu_1536_p3 = ((and_ln786_9_fu_1188_p2[0:0] === 1'b1) ? 10'd512 : tmp_19_fu_1518_p4);

assign select_ln388_fu_1230_p3 = ((and_ln786_fu_693_p2[0:0] === 1'b1) ? 10'd512 : tmp_fu_1212_p4);

assign select_ln86_1_fu_581_p3 = ((icmp_ln1496_1_reg_2028[0:0] === 1'b1) ? data_array_3_V_reg_1979 : data_array_2_V_reg_1973);

assign select_ln86_2_fu_592_p3 = ((icmp_ln1496_2_fu_586_p2[0:0] === 1'b1) ? select_ln86_1_fu_581_p3 : select_ln86_fu_576_p3);

assign select_ln86_3_fu_600_p3 = ((icmp_ln1496_3_reg_2033[0:0] === 1'b1) ? data_array_5_V_reg_1991 : data_array_4_V_reg_1985);

assign select_ln86_4_fu_605_p3 = ((icmp_ln1496_4_reg_2038[0:0] === 1'b1) ? data_array_7_V_reg_2003 : data_array_6_V_reg_1997);

assign select_ln86_5_fu_616_p3 = ((icmp_ln1496_5_fu_610_p2[0:0] === 1'b1) ? select_ln86_4_fu_605_p3 : select_ln86_3_fu_600_p3);

assign select_ln86_6_fu_630_p3 = ((icmp_ln1496_6_fu_624_p2[0:0] === 1'b1) ? select_ln86_5_fu_616_p3 : select_ln86_2_fu_592_p3);

assign select_ln86_7_fu_642_p3 = ((icmp_ln1496_7_fu_638_p2[0:0] === 1'b1) ? data_array_9_V_reg_2016 : data_array_8_V_reg_2009);

assign select_ln86_fu_576_p3 = ((icmp_ln1496_reg_2023[0:0] === 1'b1) ? data_array_1_V_reg_1967 : data_array_0_V_reg_1961);

assign sext_ln242_fu_1857_p1 = $signed(inv_exp_sum_V_reg_2250);

assign sext_ln703_10_fu_1157_p1 = data_array_9_V_reg_2016;

assign sext_ln703_1_fu_661_p1 = $signed(x_max_V_fu_652_p3);

assign sext_ln703_2_fu_717_p1 = data_array_1_V_reg_1967;

assign sext_ln703_3_fu_772_p1 = data_array_2_V_reg_1973;

assign sext_ln703_4_fu_827_p1 = data_array_3_V_reg_1979;

assign sext_ln703_5_fu_882_p1 = data_array_4_V_reg_1985;

assign sext_ln703_6_fu_937_p1 = data_array_5_V_reg_1991;

assign sext_ln703_7_fu_992_p1 = data_array_6_V_reg_1997;

assign sext_ln703_8_fu_1047_p1 = data_array_7_V_reg_2003;

assign sext_ln703_9_fu_1102_p1 = data_array_8_V_reg_2009;

assign sext_ln703_fu_658_p1 = data_array_0_V_reg_1961;

assign sub_ln1193_1_fu_720_p2 = ($signed(sext_ln703_2_fu_717_p1) - $signed(sext_ln703_1_fu_661_p1));

assign sub_ln1193_2_fu_775_p2 = ($signed(sext_ln703_3_fu_772_p1) - $signed(sext_ln703_1_fu_661_p1));

assign sub_ln1193_3_fu_830_p2 = ($signed(sext_ln703_4_fu_827_p1) - $signed(sext_ln703_1_fu_661_p1));

assign sub_ln1193_4_fu_885_p2 = ($signed(sext_ln703_5_fu_882_p1) - $signed(sext_ln703_1_fu_661_p1));

assign sub_ln1193_5_fu_940_p2 = ($signed(sext_ln703_6_fu_937_p1) - $signed(sext_ln703_1_fu_661_p1));

assign sub_ln1193_6_fu_995_p2 = ($signed(sext_ln703_7_fu_992_p1) - $signed(sext_ln703_1_fu_661_p1));

assign sub_ln1193_7_fu_1050_p2 = ($signed(sext_ln703_8_fu_1047_p1) - $signed(sext_ln703_1_fu_661_p1));

assign sub_ln1193_8_fu_1105_p2 = ($signed(sext_ln703_9_fu_1102_p1) - $signed(sext_ln703_1_fu_661_p1));

assign sub_ln1193_9_fu_1160_p2 = ($signed(sext_ln703_10_fu_1157_p1) - $signed(sext_ln703_1_fu_661_p1));

assign sub_ln1193_fu_665_p2 = ($signed(sext_ln703_fu_658_p1) - $signed(sext_ln703_1_fu_661_p1));

assign tmp_11_fu_1246_p4 = {{sub_ln1193_1_fu_720_p2[15:6]}};

assign tmp_12_fu_1280_p4 = {{sub_ln1193_2_fu_775_p2[15:6]}};

assign tmp_13_fu_1314_p4 = {{sub_ln1193_3_fu_830_p2[15:6]}};

assign tmp_14_fu_1348_p4 = {{sub_ln1193_4_fu_885_p2[15:6]}};

assign tmp_15_fu_1382_p4 = {{sub_ln1193_5_fu_940_p2[15:6]}};

assign tmp_16_fu_1416_p4 = {{sub_ln1193_6_fu_995_p2[15:6]}};

assign tmp_17_fu_1450_p4 = {{sub_ln1193_7_fu_1050_p2[15:6]}};

assign tmp_18_fu_1484_p4 = {{sub_ln1193_8_fu_1105_p2[15:6]}};

assign tmp_19_fu_1518_p4 = {{sub_ln1193_9_fu_1160_p2[15:6]}};

assign tmp_21_fu_671_p3 = sub_ln1193_fu_665_p2[32'd16];

assign tmp_22_fu_679_p3 = sub_ln1193_fu_665_p2[32'd15];

assign tmp_23_fu_726_p3 = sub_ln1193_1_fu_720_p2[32'd16];

assign tmp_24_fu_734_p3 = sub_ln1193_1_fu_720_p2[32'd15];

assign tmp_25_fu_781_p3 = sub_ln1193_2_fu_775_p2[32'd16];

assign tmp_26_fu_789_p3 = sub_ln1193_2_fu_775_p2[32'd15];

assign tmp_27_fu_836_p3 = sub_ln1193_3_fu_830_p2[32'd16];

assign tmp_28_fu_844_p3 = sub_ln1193_3_fu_830_p2[32'd15];

assign tmp_29_fu_891_p3 = sub_ln1193_4_fu_885_p2[32'd16];

assign tmp_30_fu_899_p3 = sub_ln1193_4_fu_885_p2[32'd15];

assign tmp_31_fu_946_p3 = sub_ln1193_5_fu_940_p2[32'd16];

assign tmp_32_fu_954_p3 = sub_ln1193_5_fu_940_p2[32'd15];

assign tmp_33_fu_1001_p3 = sub_ln1193_6_fu_995_p2[32'd16];

assign tmp_34_fu_1009_p3 = sub_ln1193_6_fu_995_p2[32'd15];

assign tmp_35_fu_1056_p3 = sub_ln1193_7_fu_1050_p2[32'd16];

assign tmp_36_fu_1064_p3 = sub_ln1193_7_fu_1050_p2[32'd15];

assign tmp_37_fu_1111_p3 = sub_ln1193_8_fu_1105_p2[32'd16];

assign tmp_38_fu_1119_p3 = sub_ln1193_8_fu_1105_p2[32'd15];

assign tmp_39_fu_1166_p3 = sub_ln1193_9_fu_1160_p2[32'd16];

assign tmp_40_fu_1174_p3 = sub_ln1193_9_fu_1160_p2[32'd15];

assign tmp_fu_1212_p4 = {{sub_ln1193_fu_665_p2[15:6]}};

assign underflow_1_fu_1811_p2 = (xor_ln786_11_fu_1806_p2 & p_Result_20_reg_2225);

assign underflow_fu_1676_p2 = (xor_ln786_10_fu_1670_p2 & p_Result_s_fu_1650_p3);

assign x_max_V_fu_652_p3 = ((icmp_ln1496_8_fu_648_p2[0:0] === 1'b1) ? select_ln86_7_reg_2049 : select_ln86_6_reg_2043);

assign xor_ln340_10_fu_699_p2 = (tmp_22_fu_679_p3 ^ tmp_21_fu_671_p3);

assign xor_ln340_11_fu_754_p2 = (tmp_24_fu_734_p3 ^ tmp_23_fu_726_p3);

assign xor_ln340_12_fu_809_p2 = (tmp_26_fu_789_p3 ^ tmp_25_fu_781_p3);

assign xor_ln340_13_fu_864_p2 = (tmp_28_fu_844_p3 ^ tmp_27_fu_836_p3);

assign xor_ln340_14_fu_919_p2 = (tmp_30_fu_899_p3 ^ tmp_29_fu_891_p3);

assign xor_ln340_15_fu_974_p2 = (tmp_32_fu_954_p3 ^ tmp_31_fu_946_p3);

assign xor_ln340_16_fu_1029_p2 = (tmp_34_fu_1009_p3 ^ tmp_33_fu_1001_p3);

assign xor_ln340_17_fu_1084_p2 = (tmp_36_fu_1064_p3 ^ tmp_35_fu_1056_p3);

assign xor_ln340_18_fu_1139_p2 = (tmp_38_fu_1119_p3 ^ tmp_37_fu_1111_p3);

assign xor_ln340_19_fu_1194_p2 = (tmp_40_fu_1174_p3 ^ tmp_39_fu_1166_p3);

assign xor_ln340_1_fu_760_p2 = (tmp_23_fu_726_p3 ^ 1'd1);

assign xor_ln340_20_fu_1682_p2 = (p_Result_s_fu_1650_p3 ^ p_Result_18_fu_1662_p3);

assign xor_ln340_21_fu_1688_p2 = (p_Result_s_fu_1650_p3 ^ 1'd1);

assign xor_ln340_22_fu_1816_p2 = (p_Result_21_reg_2232 ^ p_Result_20_reg_2225);

assign xor_ln340_23_fu_1820_p2 = (p_Result_20_reg_2225 ^ 1'd1);

assign xor_ln340_2_fu_815_p2 = (tmp_25_fu_781_p3 ^ 1'd1);

assign xor_ln340_3_fu_870_p2 = (tmp_27_fu_836_p3 ^ 1'd1);

assign xor_ln340_4_fu_925_p2 = (tmp_29_fu_891_p3 ^ 1'd1);

assign xor_ln340_5_fu_980_p2 = (tmp_31_fu_946_p3 ^ 1'd1);

assign xor_ln340_6_fu_1035_p2 = (tmp_33_fu_1001_p3 ^ 1'd1);

assign xor_ln340_7_fu_1090_p2 = (tmp_35_fu_1056_p3 ^ 1'd1);

assign xor_ln340_8_fu_1145_p2 = (tmp_37_fu_1111_p3 ^ 1'd1);

assign xor_ln340_9_fu_1200_p2 = (tmp_39_fu_1166_p3 ^ 1'd1);

assign xor_ln340_fu_705_p2 = (tmp_21_fu_671_p3 ^ 1'd1);

assign xor_ln786_10_fu_1670_p2 = (p_Result_18_fu_1662_p3 ^ 1'd1);

assign xor_ln786_11_fu_1806_p2 = (p_Result_21_reg_2232 ^ 1'd1);

assign xor_ln786_1_fu_742_p2 = (tmp_24_fu_734_p3 ^ 1'd1);

assign xor_ln786_2_fu_797_p2 = (tmp_26_fu_789_p3 ^ 1'd1);

assign xor_ln786_3_fu_852_p2 = (tmp_28_fu_844_p3 ^ 1'd1);

assign xor_ln786_4_fu_907_p2 = (tmp_30_fu_899_p3 ^ 1'd1);

assign xor_ln786_5_fu_962_p2 = (tmp_32_fu_954_p3 ^ 1'd1);

assign xor_ln786_6_fu_1017_p2 = (tmp_34_fu_1009_p3 ^ 1'd1);

assign xor_ln786_7_fu_1072_p2 = (tmp_36_fu_1064_p3 ^ 1'd1);

assign xor_ln786_8_fu_1127_p2 = (tmp_38_fu_1119_p3 ^ 1'd1);

assign xor_ln786_9_fu_1182_p2 = (tmp_40_fu_1174_p3 ^ 1'd1);

assign xor_ln786_fu_687_p2 = (tmp_22_fu_679_p3 ^ 1'd1);

assign y_V_10_fu_1844_p3 = ((or_ln340_11_fu_1825_p2[0:0] === 1'b1) ? select_ln340_22_fu_1830_p3 : select_ln388_11_fu_1837_p3);

assign y_V_1_fu_1272_p3 = ((or_ln340_1_fu_766_p2[0:0] === 1'b1) ? select_ln340_2_fu_1256_p3 : select_ln388_1_fu_1264_p3);

assign y_V_2_fu_1306_p3 = ((or_ln340_2_fu_821_p2[0:0] === 1'b1) ? select_ln340_4_fu_1290_p3 : select_ln388_2_fu_1298_p3);

assign y_V_3_fu_1340_p3 = ((or_ln340_3_fu_876_p2[0:0] === 1'b1) ? select_ln340_6_fu_1324_p3 : select_ln388_3_fu_1332_p3);

assign y_V_4_fu_1374_p3 = ((or_ln340_4_fu_931_p2[0:0] === 1'b1) ? select_ln340_8_fu_1358_p3 : select_ln388_4_fu_1366_p3);

assign y_V_5_fu_1408_p3 = ((or_ln340_5_fu_986_p2[0:0] === 1'b1) ? select_ln340_10_fu_1392_p3 : select_ln388_5_fu_1400_p3);

assign y_V_6_fu_1442_p3 = ((or_ln340_6_fu_1041_p2[0:0] === 1'b1) ? select_ln340_12_fu_1426_p3 : select_ln388_6_fu_1434_p3);

assign y_V_7_fu_1476_p3 = ((or_ln340_7_fu_1096_p2[0:0] === 1'b1) ? select_ln340_14_fu_1460_p3 : select_ln388_7_fu_1468_p3);

assign y_V_8_fu_1510_p3 = ((or_ln340_8_fu_1151_p2[0:0] === 1'b1) ? select_ln340_16_fu_1494_p3 : select_ln388_8_fu_1502_p3);

assign y_V_9_fu_1544_p3 = ((or_ln340_9_fu_1206_p2[0:0] === 1'b1) ? select_ln340_18_fu_1528_p3 : select_ln388_9_fu_1536_p3);

assign y_V_fu_1238_p3 = ((or_ln340_fu_711_p2[0:0] === 1'b1) ? select_ln340_fu_1222_p3 : select_ln388_fu_1230_p3);

assign zext_ln1118_1_fu_1865_p1 = exp_res_1_V_1_reg_2121_pp0_iter1_reg;

assign zext_ln1118_2_fu_1869_p1 = exp_res_2_V_1_reg_2132_pp0_iter1_reg;

assign zext_ln1118_3_fu_1873_p1 = exp_res_3_V_1_reg_2143_pp0_iter1_reg;

assign zext_ln1118_4_fu_1877_p1 = exp_res_4_V_1_reg_2154_pp0_iter1_reg;

assign zext_ln1118_5_fu_1881_p1 = exp_res_5_V_1_reg_2164_pp0_iter1_reg;

assign zext_ln1118_6_fu_1885_p1 = exp_res_6_V_1_reg_2174_pp0_iter2_reg;

assign zext_ln1118_7_fu_1889_p1 = exp_res_7_V_1_reg_2184_pp0_iter2_reg;

assign zext_ln1118_8_fu_1893_p1 = exp_res_8_V_1_reg_2194_pp0_iter2_reg;

assign zext_ln1118_9_fu_1897_p1 = exp_res_9_V_1_reg_2206_pp0_iter2_reg;

assign zext_ln1118_fu_1861_p1 = exp_res_0_V_1_reg_2110_pp0_iter1_reg;

assign zext_ln230_1_fu_1556_p1 = y_V_1_reg_2060;

assign zext_ln230_2_fu_1560_p1 = y_V_2_reg_2065;

assign zext_ln230_3_fu_1564_p1 = y_V_3_reg_2070;

assign zext_ln230_4_fu_1568_p1 = y_V_4_reg_2075;

assign zext_ln230_5_fu_1593_p1 = y_V_5_reg_2080;

assign zext_ln230_6_fu_1602_p1 = y_V_6_reg_2085;

assign zext_ln230_7_fu_1611_p1 = y_V_7_reg_2090;

assign zext_ln230_8_fu_1620_p1 = y_V_8_reg_2095;

assign zext_ln230_9_fu_1629_p1 = y_V_9_reg_2100;

assign zext_ln230_fu_1552_p1 = y_V_reg_2055;

assign zext_ln238_fu_1852_p1 = y_V_10_fu_1844_p3;

assign zext_ln746_fu_1756_p1 = p_Val2_27_fu_1748_p3;

endmodule //softmax_stable_array_array_softmax_config28_s
