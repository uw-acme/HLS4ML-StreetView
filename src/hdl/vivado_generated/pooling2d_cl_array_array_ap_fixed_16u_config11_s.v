// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pooling2d_cl_array_array_ap_fixed_16u_config11_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        data_V_data_4_V_dout,
        data_V_data_4_V_empty_n,
        data_V_data_4_V_read,
        data_V_data_5_V_dout,
        data_V_data_5_V_empty_n,
        data_V_data_5_V_read,
        data_V_data_6_V_dout,
        data_V_data_6_V_empty_n,
        data_V_data_6_V_read,
        data_V_data_7_V_dout,
        data_V_data_7_V_empty_n,
        data_V_data_7_V_read,
        data_V_data_8_V_dout,
        data_V_data_8_V_empty_n,
        data_V_data_8_V_read,
        data_V_data_9_V_dout,
        data_V_data_9_V_empty_n,
        data_V_data_9_V_read,
        data_V_data_10_V_dout,
        data_V_data_10_V_empty_n,
        data_V_data_10_V_read,
        data_V_data_11_V_dout,
        data_V_data_11_V_empty_n,
        data_V_data_11_V_read,
        data_V_data_12_V_dout,
        data_V_data_12_V_empty_n,
        data_V_data_12_V_read,
        data_V_data_13_V_dout,
        data_V_data_13_V_empty_n,
        data_V_data_13_V_read,
        data_V_data_14_V_dout,
        data_V_data_14_V_empty_n,
        data_V_data_14_V_read,
        data_V_data_15_V_dout,
        data_V_data_15_V_empty_n,
        data_V_data_15_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write,
        res_V_data_6_V_din,
        res_V_data_6_V_full_n,
        res_V_data_6_V_write,
        res_V_data_7_V_din,
        res_V_data_7_V_full_n,
        res_V_data_7_V_write,
        res_V_data_8_V_din,
        res_V_data_8_V_full_n,
        res_V_data_8_V_write,
        res_V_data_9_V_din,
        res_V_data_9_V_full_n,
        res_V_data_9_V_write,
        res_V_data_10_V_din,
        res_V_data_10_V_full_n,
        res_V_data_10_V_write,
        res_V_data_11_V_din,
        res_V_data_11_V_full_n,
        res_V_data_11_V_write,
        res_V_data_12_V_din,
        res_V_data_12_V_full_n,
        res_V_data_12_V_write,
        res_V_data_13_V_din,
        res_V_data_13_V_full_n,
        res_V_data_13_V_write,
        res_V_data_14_V_din,
        res_V_data_14_V_full_n,
        res_V_data_14_V_write,
        res_V_data_15_V_din,
        res_V_data_15_V_full_n,
        res_V_data_15_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [15:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [15:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [15:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
input  [15:0] data_V_data_4_V_dout;
input   data_V_data_4_V_empty_n;
output   data_V_data_4_V_read;
input  [15:0] data_V_data_5_V_dout;
input   data_V_data_5_V_empty_n;
output   data_V_data_5_V_read;
input  [15:0] data_V_data_6_V_dout;
input   data_V_data_6_V_empty_n;
output   data_V_data_6_V_read;
input  [15:0] data_V_data_7_V_dout;
input   data_V_data_7_V_empty_n;
output   data_V_data_7_V_read;
input  [15:0] data_V_data_8_V_dout;
input   data_V_data_8_V_empty_n;
output   data_V_data_8_V_read;
input  [15:0] data_V_data_9_V_dout;
input   data_V_data_9_V_empty_n;
output   data_V_data_9_V_read;
input  [15:0] data_V_data_10_V_dout;
input   data_V_data_10_V_empty_n;
output   data_V_data_10_V_read;
input  [15:0] data_V_data_11_V_dout;
input   data_V_data_11_V_empty_n;
output   data_V_data_11_V_read;
input  [15:0] data_V_data_12_V_dout;
input   data_V_data_12_V_empty_n;
output   data_V_data_12_V_read;
input  [15:0] data_V_data_13_V_dout;
input   data_V_data_13_V_empty_n;
output   data_V_data_13_V_read;
input  [15:0] data_V_data_14_V_dout;
input   data_V_data_14_V_empty_n;
output   data_V_data_14_V_read;
input  [15:0] data_V_data_15_V_dout;
input   data_V_data_15_V_empty_n;
output   data_V_data_15_V_read;
output  [15:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [15:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [15:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [15:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [15:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [15:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;
output  [15:0] res_V_data_6_V_din;
input   res_V_data_6_V_full_n;
output   res_V_data_6_V_write;
output  [15:0] res_V_data_7_V_din;
input   res_V_data_7_V_full_n;
output   res_V_data_7_V_write;
output  [15:0] res_V_data_8_V_din;
input   res_V_data_8_V_full_n;
output   res_V_data_8_V_write;
output  [15:0] res_V_data_9_V_din;
input   res_V_data_9_V_full_n;
output   res_V_data_9_V_write;
output  [15:0] res_V_data_10_V_din;
input   res_V_data_10_V_full_n;
output   res_V_data_10_V_write;
output  [15:0] res_V_data_11_V_din;
input   res_V_data_11_V_full_n;
output   res_V_data_11_V_write;
output  [15:0] res_V_data_12_V_din;
input   res_V_data_12_V_full_n;
output   res_V_data_12_V_write;
output  [15:0] res_V_data_13_V_din;
input   res_V_data_13_V_full_n;
output   res_V_data_13_V_write;
output  [15:0] res_V_data_14_V_din;
input   res_V_data_14_V_full_n;
output   res_V_data_14_V_write;
output  [15:0] res_V_data_15_V_din;
input   res_V_data_15_V_full_n;
output   res_V_data_15_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg data_V_data_4_V_read;
reg data_V_data_5_V_read;
reg data_V_data_6_V_read;
reg data_V_data_7_V_read;
reg data_V_data_8_V_read;
reg data_V_data_9_V_read;
reg data_V_data_10_V_read;
reg data_V_data_11_V_read;
reg data_V_data_12_V_read;
reg data_V_data_13_V_read;
reg data_V_data_14_V_read;
reg data_V_data_15_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;
reg res_V_data_6_V_write;
reg res_V_data_7_V_write;
reg res_V_data_8_V_write;
reg res_V_data_9_V_write;
reg res_V_data_10_V_write;
reg res_V_data_11_V_write;
reg res_V_data_12_V_write;
reg res_V_data_13_V_write;
reg res_V_data_14_V_write;
reg res_V_data_15_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] pX_2;
reg   [31:0] sX_2;
reg   [31:0] pY_2;
reg   [31:0] sY_2;
reg   [15:0] kernel_data_V_3_16;
reg   [15:0] kernel_data_V_3_17;
reg   [15:0] kernel_data_V_3_18;
reg   [15:0] kernel_data_V_3_19;
reg   [15:0] kernel_data_V_3_20;
reg   [15:0] kernel_data_V_3_21;
reg   [15:0] kernel_data_V_3_22;
reg   [15:0] kernel_data_V_3_23;
reg   [15:0] kernel_data_V_3_24;
reg   [15:0] kernel_data_V_3_25;
reg   [15:0] kernel_data_V_3_26;
reg   [15:0] kernel_data_V_3_27;
reg   [15:0] kernel_data_V_3_28;
reg   [15:0] kernel_data_V_3_29;
reg   [15:0] kernel_data_V_3_30;
reg   [15:0] kernel_data_V_3_31;
reg   [15:0] kernel_data_V_3_48;
reg   [15:0] kernel_data_V_3_49;
reg   [15:0] kernel_data_V_3_50;
reg   [15:0] kernel_data_V_3_51;
reg   [15:0] kernel_data_V_3_52;
reg   [15:0] kernel_data_V_3_53;
reg   [15:0] kernel_data_V_3_54;
reg   [15:0] kernel_data_V_3_55;
reg   [15:0] kernel_data_V_3_56;
reg   [15:0] kernel_data_V_3_57;
reg   [15:0] kernel_data_V_3_58;
reg   [15:0] kernel_data_V_3_59;
reg   [15:0] kernel_data_V_3_60;
reg   [15:0] kernel_data_V_3_61;
reg   [15:0] kernel_data_V_3_62;
reg   [15:0] kernel_data_V_3_63;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln233_reg_2236;
reg    data_V_data_1_V_blk_n;
reg    data_V_data_2_V_blk_n;
reg    data_V_data_3_V_blk_n;
reg    data_V_data_4_V_blk_n;
reg    data_V_data_5_V_blk_n;
reg    data_V_data_6_V_blk_n;
reg    data_V_data_7_V_blk_n;
reg    data_V_data_8_V_blk_n;
reg    data_V_data_9_V_blk_n;
reg    data_V_data_10_V_blk_n;
reg    data_V_data_11_V_blk_n;
reg    data_V_data_12_V_blk_n;
reg    data_V_data_13_V_blk_n;
reg    data_V_data_14_V_blk_n;
reg    data_V_data_15_V_blk_n;
reg    res_V_data_0_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] and_ln185_6_reg_2565;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg    res_V_data_4_V_blk_n;
reg    res_V_data_5_V_blk_n;
reg    res_V_data_6_V_blk_n;
reg    res_V_data_7_V_blk_n;
reg    res_V_data_8_V_blk_n;
reg    res_V_data_9_V_blk_n;
reg    res_V_data_10_V_blk_n;
reg    res_V_data_11_V_blk_n;
reg    res_V_data_12_V_blk_n;
reg    res_V_data_13_V_blk_n;
reg    res_V_data_14_V_blk_n;
reg    res_V_data_15_V_blk_n;
reg   [7:0] indvar_flatten_reg_686;
wire   [0:0] icmp_ln233_fu_792_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    io_acc_block_signal_op48;
reg    ap_block_state3_pp0_stage0_iter1;
wire    io_acc_block_signal_op323;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] add_ln233_fu_798_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [15:0] pool_window_2_V_51_reg_2245;
reg   [15:0] pool_window_2_V_37_reg_2250;
reg   [15:0] pool_window_2_V_38_reg_2255;
reg   [15:0] pool_window_2_V_50_reg_2260;
reg   [15:0] pool_window_2_V_49_reg_2265;
reg   [15:0] pool_window_2_V_48_reg_2270;
reg   [15:0] pool_window_2_V_47_reg_2275;
reg   [15:0] pool_window_2_V_46_reg_2280;
reg   [15:0] pool_window_2_V_45_reg_2285;
reg   [15:0] pool_window_2_V_44_reg_2290;
reg   [15:0] pool_window_2_V_43_reg_2295;
reg   [15:0] pool_window_2_V_42_reg_2300;
reg   [15:0] pool_window_2_V_41_reg_2305;
reg   [15:0] pool_window_2_V_40_reg_2310;
reg   [15:0] pool_window_2_V_39_reg_2315;
reg   [15:0] pool_window_2_V_reg_2320;
reg   [15:0] pool_window_0_V_51_reg_2325;
reg   [15:0] pool_window_0_V_37_reg_2330;
reg   [15:0] pool_window_0_V_38_reg_2335;
reg   [15:0] pool_window_0_V_50_reg_2340;
reg   [15:0] pool_window_0_V_49_reg_2345;
reg   [15:0] pool_window_0_V_48_reg_2350;
reg   [15:0] pool_window_0_V_47_reg_2355;
reg   [15:0] pool_window_0_V_46_reg_2360;
reg   [15:0] pool_window_0_V_45_reg_2365;
reg   [15:0] pool_window_0_V_44_reg_2370;
reg   [15:0] pool_window_0_V_43_reg_2375;
reg   [15:0] pool_window_0_V_42_reg_2380;
reg   [15:0] pool_window_0_V_41_reg_2385;
reg   [15:0] pool_window_0_V_40_reg_2390;
reg   [15:0] pool_window_0_V_39_reg_2395;
reg   [15:0] pool_window_0_V_reg_2400;
reg   [15:0] pool_window_1_V_reg_2405;
reg   [15:0] pool_window_1_V_51_reg_2410;
reg   [15:0] pool_window_1_V_37_reg_2415;
reg   [15:0] pool_window_1_V_38_reg_2420;
reg   [15:0] pool_window_1_V_39_reg_2425;
reg   [15:0] pool_window_1_V_40_reg_2430;
reg   [15:0] pool_window_1_V_41_reg_2435;
reg   [15:0] pool_window_1_V_42_reg_2440;
reg   [15:0] pool_window_1_V_43_reg_2445;
reg   [15:0] pool_window_1_V_44_reg_2450;
reg   [15:0] pool_window_1_V_45_reg_2455;
reg   [15:0] pool_window_1_V_46_reg_2460;
reg   [15:0] pool_window_1_V_47_reg_2465;
reg   [15:0] pool_window_1_V_48_reg_2470;
reg   [15:0] pool_window_1_V_49_reg_2475;
reg   [15:0] pool_window_1_V_50_reg_2480;
reg   [15:0] pool_window_3_V_reg_2485;
reg   [15:0] pool_window_3_V_51_reg_2490;
reg   [15:0] pool_window_3_V_37_reg_2495;
reg   [15:0] pool_window_3_V_38_reg_2500;
reg   [15:0] pool_window_3_V_39_reg_2505;
reg   [15:0] pool_window_3_V_40_reg_2510;
reg   [15:0] pool_window_3_V_41_reg_2515;
reg   [15:0] pool_window_3_V_42_reg_2520;
reg   [15:0] pool_window_3_V_43_reg_2525;
reg   [15:0] pool_window_3_V_44_reg_2530;
reg   [15:0] pool_window_3_V_45_reg_2535;
reg   [15:0] pool_window_3_V_46_reg_2540;
reg   [15:0] pool_window_3_V_47_reg_2545;
reg   [15:0] pool_window_3_V_48_reg_2550;
reg   [15:0] pool_window_3_V_49_reg_2555;
reg   [15:0] pool_window_3_V_50_reg_2560;
wire   [0:0] and_ln185_6_fu_1544_p2;
wire   [0:0] icmp_ln1496_fu_1550_p2;
reg   [0:0] icmp_ln1496_reg_2569;
wire   [0:0] icmp_ln1496_58_fu_1556_p2;
reg   [0:0] icmp_ln1496_58_reg_2574;
wire   [0:0] icmp_ln1496_60_fu_1562_p2;
reg   [0:0] icmp_ln1496_60_reg_2579;
wire   [0:0] icmp_ln1496_61_fu_1568_p2;
reg   [0:0] icmp_ln1496_61_reg_2584;
wire   [0:0] icmp_ln1496_63_fu_1574_p2;
reg   [0:0] icmp_ln1496_63_reg_2589;
wire   [0:0] icmp_ln1496_64_fu_1580_p2;
reg   [0:0] icmp_ln1496_64_reg_2594;
wire   [0:0] icmp_ln1496_66_fu_1586_p2;
reg   [0:0] icmp_ln1496_66_reg_2599;
wire   [0:0] icmp_ln1496_67_fu_1592_p2;
reg   [0:0] icmp_ln1496_67_reg_2604;
wire   [0:0] icmp_ln1496_69_fu_1598_p2;
reg   [0:0] icmp_ln1496_69_reg_2609;
wire   [0:0] icmp_ln1496_70_fu_1604_p2;
reg   [0:0] icmp_ln1496_70_reg_2614;
wire   [0:0] icmp_ln1496_72_fu_1610_p2;
reg   [0:0] icmp_ln1496_72_reg_2619;
wire   [0:0] icmp_ln1496_73_fu_1616_p2;
reg   [0:0] icmp_ln1496_73_reg_2624;
wire   [0:0] icmp_ln1496_75_fu_1622_p2;
reg   [0:0] icmp_ln1496_75_reg_2629;
wire   [0:0] icmp_ln1496_76_fu_1628_p2;
reg   [0:0] icmp_ln1496_76_reg_2634;
wire   [0:0] icmp_ln1496_78_fu_1634_p2;
reg   [0:0] icmp_ln1496_78_reg_2639;
wire   [0:0] icmp_ln1496_79_fu_1640_p2;
reg   [0:0] icmp_ln1496_79_reg_2644;
wire   [0:0] icmp_ln1496_81_fu_1646_p2;
reg   [0:0] icmp_ln1496_81_reg_2649;
wire   [0:0] icmp_ln1496_82_fu_1652_p2;
reg   [0:0] icmp_ln1496_82_reg_2654;
wire   [0:0] icmp_ln1496_84_fu_1658_p2;
reg   [0:0] icmp_ln1496_84_reg_2659;
wire   [0:0] icmp_ln1496_85_fu_1664_p2;
reg   [0:0] icmp_ln1496_85_reg_2664;
wire   [0:0] icmp_ln1496_87_fu_1670_p2;
reg   [0:0] icmp_ln1496_87_reg_2669;
wire   [0:0] icmp_ln1496_88_fu_1676_p2;
reg   [0:0] icmp_ln1496_88_reg_2674;
wire   [0:0] icmp_ln1496_90_fu_1682_p2;
reg   [0:0] icmp_ln1496_90_reg_2679;
wire   [0:0] icmp_ln1496_91_fu_1688_p2;
reg   [0:0] icmp_ln1496_91_reg_2684;
wire   [0:0] icmp_ln1496_93_fu_1694_p2;
reg   [0:0] icmp_ln1496_93_reg_2689;
wire   [0:0] icmp_ln1496_94_fu_1700_p2;
reg   [0:0] icmp_ln1496_94_reg_2694;
wire   [0:0] icmp_ln1496_96_fu_1706_p2;
reg   [0:0] icmp_ln1496_96_reg_2699;
wire   [0:0] icmp_ln1496_97_fu_1712_p2;
reg   [0:0] icmp_ln1496_97_reg_2704;
wire   [0:0] icmp_ln1496_99_fu_1718_p2;
reg   [0:0] icmp_ln1496_99_reg_2709;
wire   [0:0] icmp_ln1496_100_fu_1724_p2;
reg   [0:0] icmp_ln1496_100_reg_2714;
wire   [0:0] icmp_ln1496_102_fu_1730_p2;
reg   [0:0] icmp_ln1496_102_reg_2719;
wire   [0:0] icmp_ln1496_103_fu_1736_p2;
reg   [0:0] icmp_ln1496_103_reg_2724;
wire   [0:0] icmp_ln203_fu_1742_p2;
reg   [0:0] icmp_ln203_reg_2729;
wire   [0:0] icmp_ln207_fu_1792_p2;
wire   [31:0] select_ln213_fu_1816_p3;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_start;
wire    call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_done;
wire    call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_idle;
wire    call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_ready;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_0;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_1;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_2;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_3;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_4;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_5;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_6;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_7;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_8;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_9;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_10;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_11;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_12;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_13;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_14;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_15;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_16;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_17;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_18;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_19;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_20;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_21;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_22;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_23;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_24;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_25;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_26;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_27;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_28;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_29;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_30;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_31;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_32;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_33;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_34;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_35;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_36;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_37;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_38;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_39;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_40;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_41;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_42;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_43;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_44;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_45;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_46;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_47;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_48;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_49;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_50;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_51;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_52;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_53;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_54;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_55;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_56;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_57;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_58;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_59;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_60;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_61;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_62;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_63;
reg    call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_ce;
wire    ap_block_state2_pp0_stage0_iter0_ignore_call54;
reg    ap_block_state3_pp0_stage0_iter1_ignore_call54;
reg    ap_block_state4_pp0_stage0_iter2_ignore_call54;
reg    ap_block_pp0_stage0_11001_ignoreCallOp97;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_i_i_reg_697;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_i_i_reg_697;
reg   [31:0] ap_phi_reg_pp0_iter2_storemerge_i_i_reg_697;
reg    call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_start_reg;
wire   [31:0] add_ln216_fu_1748_p2;
wire   [31:0] select_ln218_fu_1766_p3;
wire   [31:0] add_ln211_fu_1798_p2;
reg   [31:0] ap_sig_allocacmp_sY_2_load;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln185_fu_1496_p2;
wire   [0:0] icmp_ln185_7_fu_1506_p2;
wire   [0:0] icmp_ln185_8_fu_1516_p2;
wire   [0:0] icmp_ln185_9_fu_1526_p2;
wire   [0:0] and_ln185_5_fu_1538_p2;
wire   [0:0] and_ln185_fu_1532_p2;
wire   [31:0] add_ln218_fu_1760_p2;
wire   [31:0] add_ln213_fu_1810_p2;
wire   [15:0] select_ln86_fu_1830_p3;
wire   [15:0] select_ln86_58_fu_1835_p3;
wire   [0:0] icmp_ln1496_59_fu_1840_p2;
wire   [15:0] select_ln86_60_fu_1855_p3;
wire   [15:0] select_ln86_61_fu_1860_p3;
wire   [0:0] icmp_ln1496_62_fu_1865_p2;
wire   [15:0] select_ln86_63_fu_1880_p3;
wire   [15:0] select_ln86_64_fu_1885_p3;
wire   [0:0] icmp_ln1496_65_fu_1890_p2;
wire   [15:0] select_ln86_66_fu_1905_p3;
wire   [15:0] select_ln86_67_fu_1910_p3;
wire   [0:0] icmp_ln1496_68_fu_1915_p2;
wire   [15:0] select_ln86_69_fu_1930_p3;
wire   [15:0] select_ln86_70_fu_1935_p3;
wire   [0:0] icmp_ln1496_71_fu_1940_p2;
wire   [15:0] select_ln86_72_fu_1955_p3;
wire   [15:0] select_ln86_73_fu_1960_p3;
wire   [0:0] icmp_ln1496_74_fu_1965_p2;
wire   [15:0] select_ln86_75_fu_1980_p3;
wire   [15:0] select_ln86_76_fu_1985_p3;
wire   [0:0] icmp_ln1496_77_fu_1990_p2;
wire   [15:0] select_ln86_78_fu_2005_p3;
wire   [15:0] select_ln86_79_fu_2010_p3;
wire   [0:0] icmp_ln1496_80_fu_2015_p2;
wire   [15:0] select_ln86_81_fu_2030_p3;
wire   [15:0] select_ln86_82_fu_2035_p3;
wire   [0:0] icmp_ln1496_83_fu_2040_p2;
wire   [15:0] select_ln86_84_fu_2055_p3;
wire   [15:0] select_ln86_85_fu_2060_p3;
wire   [0:0] icmp_ln1496_86_fu_2065_p2;
wire   [15:0] select_ln86_87_fu_2080_p3;
wire   [15:0] select_ln86_88_fu_2085_p3;
wire   [0:0] icmp_ln1496_89_fu_2090_p2;
wire   [15:0] select_ln86_90_fu_2105_p3;
wire   [15:0] select_ln86_91_fu_2110_p3;
wire   [0:0] icmp_ln1496_92_fu_2115_p2;
wire   [15:0] select_ln86_93_fu_2130_p3;
wire   [15:0] select_ln86_94_fu_2135_p3;
wire   [0:0] icmp_ln1496_95_fu_2140_p2;
wire   [15:0] select_ln86_96_fu_2155_p3;
wire   [15:0] select_ln86_97_fu_2160_p3;
wire   [0:0] icmp_ln1496_98_fu_2165_p2;
wire   [15:0] select_ln86_99_fu_2180_p3;
wire   [15:0] select_ln86_100_fu_2185_p3;
wire   [0:0] icmp_ln1496_101_fu_2190_p2;
wire   [15:0] select_ln86_102_fu_2205_p3;
wire   [15:0] select_ln86_103_fu_2210_p3;
wire   [0:0] icmp_ln1496_104_fu_2215_p2;
wire    ap_CS_fsm_state5;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_497;
reg    ap_condition_652;
reg    ap_condition_648;
reg    ap_condition_5717;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 pX_2 = 32'd0;
#0 sX_2 = 32'd0;
#0 pY_2 = 32'd0;
#0 sY_2 = 32'd0;
#0 kernel_data_V_3_16 = 16'd0;
#0 kernel_data_V_3_17 = 16'd0;
#0 kernel_data_V_3_18 = 16'd0;
#0 kernel_data_V_3_19 = 16'd0;
#0 kernel_data_V_3_20 = 16'd0;
#0 kernel_data_V_3_21 = 16'd0;
#0 kernel_data_V_3_22 = 16'd0;
#0 kernel_data_V_3_23 = 16'd0;
#0 kernel_data_V_3_24 = 16'd0;
#0 kernel_data_V_3_25 = 16'd0;
#0 kernel_data_V_3_26 = 16'd0;
#0 kernel_data_V_3_27 = 16'd0;
#0 kernel_data_V_3_28 = 16'd0;
#0 kernel_data_V_3_29 = 16'd0;
#0 kernel_data_V_3_30 = 16'd0;
#0 kernel_data_V_3_31 = 16'd0;
#0 kernel_data_V_3_48 = 16'd0;
#0 kernel_data_V_3_49 = 16'd0;
#0 kernel_data_V_3_50 = 16'd0;
#0 kernel_data_V_3_51 = 16'd0;
#0 kernel_data_V_3_52 = 16'd0;
#0 kernel_data_V_3_53 = 16'd0;
#0 kernel_data_V_3_54 = 16'd0;
#0 kernel_data_V_3_55 = 16'd0;
#0 kernel_data_V_3_56 = 16'd0;
#0 kernel_data_V_3_57 = 16'd0;
#0 kernel_data_V_3_58 = 16'd0;
#0 kernel_data_V_3_59 = 16'd0;
#0 kernel_data_V_3_60 = 16'd0;
#0 kernel_data_V_3_61 = 16'd0;
#0 kernel_data_V_3_62 = 16'd0;
#0 kernel_data_V_3_63 = 16'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_start_reg = 1'b0;
end

shift_line_buffer_array_ap_fixed_16u_config11_s call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_start),
    .ap_done(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_done),
    .ap_idle(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_idle),
    .ap_ready(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_ready),
    .in_elem_data_0_V_read(data_V_data_0_V_dout),
    .in_elem_data_1_V_read(data_V_data_1_V_dout),
    .in_elem_data_2_V_read(data_V_data_2_V_dout),
    .in_elem_data_3_V_read(data_V_data_3_V_dout),
    .in_elem_data_4_V_read(data_V_data_4_V_dout),
    .in_elem_data_5_V_read(data_V_data_5_V_dout),
    .in_elem_data_6_V_read(data_V_data_6_V_dout),
    .in_elem_data_7_V_read(data_V_data_7_V_dout),
    .in_elem_data_8_V_read(data_V_data_8_V_dout),
    .in_elem_data_9_V_read(data_V_data_9_V_dout),
    .in_elem_data_10_V_read(data_V_data_10_V_dout),
    .in_elem_data_11_V_read(data_V_data_11_V_dout),
    .in_elem_data_12_V_read(data_V_data_12_V_dout),
    .in_elem_data_13_V_read(data_V_data_13_V_dout),
    .in_elem_data_14_V_read(data_V_data_14_V_dout),
    .in_elem_data_15_V_read(data_V_data_15_V_dout),
    .kernel_window_16_V_read(kernel_data_V_3_16),
    .kernel_window_17_V_read(kernel_data_V_3_17),
    .kernel_window_18_V_read(kernel_data_V_3_18),
    .kernel_window_19_V_read(kernel_data_V_3_19),
    .kernel_window_20_V_read(kernel_data_V_3_20),
    .kernel_window_21_V_read(kernel_data_V_3_21),
    .kernel_window_22_V_read(kernel_data_V_3_22),
    .kernel_window_23_V_read(kernel_data_V_3_23),
    .kernel_window_24_V_read(kernel_data_V_3_24),
    .kernel_window_25_V_read(kernel_data_V_3_25),
    .kernel_window_26_V_read(kernel_data_V_3_26),
    .kernel_window_27_V_read(kernel_data_V_3_27),
    .kernel_window_28_V_read(kernel_data_V_3_28),
    .kernel_window_29_V_read(kernel_data_V_3_29),
    .kernel_window_30_V_read(kernel_data_V_3_30),
    .kernel_window_31_V_read(kernel_data_V_3_31),
    .kernel_window_48_V_read(kernel_data_V_3_48),
    .kernel_window_49_V_read(kernel_data_V_3_49),
    .kernel_window_50_V_read(kernel_data_V_3_50),
    .kernel_window_51_V_read(kernel_data_V_3_51),
    .kernel_window_52_V_read(kernel_data_V_3_52),
    .kernel_window_53_V_read(kernel_data_V_3_53),
    .kernel_window_54_V_read(kernel_data_V_3_54),
    .kernel_window_55_V_read(kernel_data_V_3_55),
    .kernel_window_56_V_read(kernel_data_V_3_56),
    .kernel_window_57_V_read(kernel_data_V_3_57),
    .kernel_window_58_V_read(kernel_data_V_3_58),
    .kernel_window_59_V_read(kernel_data_V_3_59),
    .kernel_window_60_V_read(kernel_data_V_3_60),
    .kernel_window_61_V_read(kernel_data_V_3_61),
    .kernel_window_62_V_read(kernel_data_V_3_62),
    .kernel_window_63_V_read(kernel_data_V_3_63),
    .ap_return_0(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_0),
    .ap_return_1(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_1),
    .ap_return_2(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_2),
    .ap_return_3(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_3),
    .ap_return_4(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_4),
    .ap_return_5(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_5),
    .ap_return_6(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_6),
    .ap_return_7(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_7),
    .ap_return_8(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_8),
    .ap_return_9(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_9),
    .ap_return_10(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_10),
    .ap_return_11(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_11),
    .ap_return_12(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_12),
    .ap_return_13(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_13),
    .ap_return_14(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_14),
    .ap_return_15(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_15),
    .ap_return_16(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_16),
    .ap_return_17(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_17),
    .ap_return_18(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_18),
    .ap_return_19(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_19),
    .ap_return_20(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_20),
    .ap_return_21(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_21),
    .ap_return_22(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_22),
    .ap_return_23(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_23),
    .ap_return_24(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_24),
    .ap_return_25(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_25),
    .ap_return_26(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_26),
    .ap_return_27(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_27),
    .ap_return_28(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_28),
    .ap_return_29(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_29),
    .ap_return_30(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_30),
    .ap_return_31(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_31),
    .ap_return_32(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_32),
    .ap_return_33(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_33),
    .ap_return_34(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_34),
    .ap_return_35(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_35),
    .ap_return_36(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_36),
    .ap_return_37(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_37),
    .ap_return_38(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_38),
    .ap_return_39(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_39),
    .ap_return_40(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_40),
    .ap_return_41(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_41),
    .ap_return_42(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_42),
    .ap_return_43(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_43),
    .ap_return_44(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_44),
    .ap_return_45(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_45),
    .ap_return_46(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_46),
    .ap_return_47(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_47),
    .ap_return_48(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_48),
    .ap_return_49(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_49),
    .ap_return_50(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_50),
    .ap_return_51(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_51),
    .ap_return_52(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_52),
    .ap_return_53(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_53),
    .ap_return_54(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_54),
    .ap_return_55(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_55),
    .ap_return_56(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_56),
    .ap_return_57(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_57),
    .ap_return_58(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_58),
    .ap_return_59(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_59),
    .ap_return_60(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_60),
    .ap_return_61(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_61),
    .ap_return_62(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_62),
    .ap_return_63(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_63),
    .ap_ce(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_fu_792_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_start_reg <= 1'b1;
        end else if ((call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_ready == 1'b1)) begin
            call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_648)) begin
        if ((1'b1 == ap_condition_652)) begin
            ap_phi_reg_pp0_iter2_storemerge_i_i_reg_697 <= 32'd0;
        end else if ((1'b1 == ap_condition_497)) begin
            ap_phi_reg_pp0_iter2_storemerge_i_i_reg_697 <= select_ln213_fu_1816_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_storemerge_i_i_reg_697 <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_697;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_fu_792_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_686 <= add_ln233_fu_798_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_686 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_648)) begin
        if ((icmp_ln203_fu_1742_p2 == 1'd1)) begin
            pX_2 <= 32'd0;
        end else if ((icmp_ln203_fu_1742_p2 == 1'd0)) begin
            pX_2 <= add_ln216_fu_1748_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_5717)) begin
        if ((icmp_ln207_fu_1792_p2 == 1'd1)) begin
            pY_2 <= 32'd0;
        end else if ((icmp_ln207_fu_1792_p2 == 1'd0)) begin
            pY_2 <= add_ln211_fu_1798_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_648)) begin
        if ((icmp_ln203_fu_1742_p2 == 1'd1)) begin
            sX_2 <= 32'd0;
        end else if ((icmp_ln203_fu_1742_p2 == 1'd0)) begin
            sX_2 <= select_ln218_fu_1766_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln185_6_reg_2565 <= and_ln185_6_fu_1544_p2;
        pool_window_0_V_37_reg_2330 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_14;
        pool_window_0_V_38_reg_2335 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_13;
        pool_window_0_V_39_reg_2395 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_1;
        pool_window_0_V_40_reg_2390 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_2;
        pool_window_0_V_41_reg_2385 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_3;
        pool_window_0_V_42_reg_2380 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_4;
        pool_window_0_V_43_reg_2375 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_5;
        pool_window_0_V_44_reg_2370 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_6;
        pool_window_0_V_45_reg_2365 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_7;
        pool_window_0_V_46_reg_2360 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_8;
        pool_window_0_V_47_reg_2355 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_9;
        pool_window_0_V_48_reg_2350 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_10;
        pool_window_0_V_49_reg_2345 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_11;
        pool_window_0_V_50_reg_2340 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_12;
        pool_window_0_V_51_reg_2325 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_15;
        pool_window_0_V_reg_2400 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_0;
        pool_window_1_V_37_reg_2415 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_34;
        pool_window_1_V_38_reg_2420 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_35;
        pool_window_1_V_39_reg_2425 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_36;
        pool_window_1_V_40_reg_2430 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_37;
        pool_window_1_V_41_reg_2435 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_38;
        pool_window_1_V_42_reg_2440 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_39;
        pool_window_1_V_43_reg_2445 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_40;
        pool_window_1_V_44_reg_2450 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_41;
        pool_window_1_V_45_reg_2455 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_42;
        pool_window_1_V_46_reg_2460 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_43;
        pool_window_1_V_47_reg_2465 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_44;
        pool_window_1_V_48_reg_2470 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_45;
        pool_window_1_V_49_reg_2475 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_46;
        pool_window_1_V_50_reg_2480 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_47;
        pool_window_1_V_51_reg_2410 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_33;
        pool_window_1_V_reg_2405 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_32;
        pool_window_2_V_37_reg_2250 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_30;
        pool_window_2_V_38_reg_2255 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_29;
        pool_window_2_V_39_reg_2315 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_17;
        pool_window_2_V_40_reg_2310 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_18;
        pool_window_2_V_41_reg_2305 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_19;
        pool_window_2_V_42_reg_2300 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_20;
        pool_window_2_V_43_reg_2295 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_21;
        pool_window_2_V_44_reg_2290 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_22;
        pool_window_2_V_45_reg_2285 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_23;
        pool_window_2_V_46_reg_2280 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_24;
        pool_window_2_V_47_reg_2275 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_25;
        pool_window_2_V_48_reg_2270 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_26;
        pool_window_2_V_49_reg_2265 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_27;
        pool_window_2_V_50_reg_2260 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_28;
        pool_window_2_V_51_reg_2245 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_31;
        pool_window_2_V_reg_2320 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_16;
        pool_window_3_V_37_reg_2495 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_50;
        pool_window_3_V_38_reg_2500 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_51;
        pool_window_3_V_39_reg_2505 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_52;
        pool_window_3_V_40_reg_2510 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_53;
        pool_window_3_V_41_reg_2515 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_54;
        pool_window_3_V_42_reg_2520 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_55;
        pool_window_3_V_43_reg_2525 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_56;
        pool_window_3_V_44_reg_2530 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_57;
        pool_window_3_V_45_reg_2535 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_58;
        pool_window_3_V_46_reg_2540 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_59;
        pool_window_3_V_47_reg_2545 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_60;
        pool_window_3_V_48_reg_2550 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_61;
        pool_window_3_V_49_reg_2555 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_62;
        pool_window_3_V_50_reg_2560 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_63;
        pool_window_3_V_51_reg_2490 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_49;
        pool_window_3_V_reg_2485 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_48;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_storemerge_i_i_reg_697 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_697;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_fu_1544_p2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1496_100_reg_2714 <= icmp_ln1496_100_fu_1724_p2;
        icmp_ln1496_102_reg_2719 <= icmp_ln1496_102_fu_1730_p2;
        icmp_ln1496_103_reg_2724 <= icmp_ln1496_103_fu_1736_p2;
        icmp_ln1496_58_reg_2574 <= icmp_ln1496_58_fu_1556_p2;
        icmp_ln1496_60_reg_2579 <= icmp_ln1496_60_fu_1562_p2;
        icmp_ln1496_61_reg_2584 <= icmp_ln1496_61_fu_1568_p2;
        icmp_ln1496_63_reg_2589 <= icmp_ln1496_63_fu_1574_p2;
        icmp_ln1496_64_reg_2594 <= icmp_ln1496_64_fu_1580_p2;
        icmp_ln1496_66_reg_2599 <= icmp_ln1496_66_fu_1586_p2;
        icmp_ln1496_67_reg_2604 <= icmp_ln1496_67_fu_1592_p2;
        icmp_ln1496_69_reg_2609 <= icmp_ln1496_69_fu_1598_p2;
        icmp_ln1496_70_reg_2614 <= icmp_ln1496_70_fu_1604_p2;
        icmp_ln1496_72_reg_2619 <= icmp_ln1496_72_fu_1610_p2;
        icmp_ln1496_73_reg_2624 <= icmp_ln1496_73_fu_1616_p2;
        icmp_ln1496_75_reg_2629 <= icmp_ln1496_75_fu_1622_p2;
        icmp_ln1496_76_reg_2634 <= icmp_ln1496_76_fu_1628_p2;
        icmp_ln1496_78_reg_2639 <= icmp_ln1496_78_fu_1634_p2;
        icmp_ln1496_79_reg_2644 <= icmp_ln1496_79_fu_1640_p2;
        icmp_ln1496_81_reg_2649 <= icmp_ln1496_81_fu_1646_p2;
        icmp_ln1496_82_reg_2654 <= icmp_ln1496_82_fu_1652_p2;
        icmp_ln1496_84_reg_2659 <= icmp_ln1496_84_fu_1658_p2;
        icmp_ln1496_85_reg_2664 <= icmp_ln1496_85_fu_1664_p2;
        icmp_ln1496_87_reg_2669 <= icmp_ln1496_87_fu_1670_p2;
        icmp_ln1496_88_reg_2674 <= icmp_ln1496_88_fu_1676_p2;
        icmp_ln1496_90_reg_2679 <= icmp_ln1496_90_fu_1682_p2;
        icmp_ln1496_91_reg_2684 <= icmp_ln1496_91_fu_1688_p2;
        icmp_ln1496_93_reg_2689 <= icmp_ln1496_93_fu_1694_p2;
        icmp_ln1496_94_reg_2694 <= icmp_ln1496_94_fu_1700_p2;
        icmp_ln1496_96_reg_2699 <= icmp_ln1496_96_fu_1706_p2;
        icmp_ln1496_97_reg_2704 <= icmp_ln1496_97_fu_1712_p2;
        icmp_ln1496_99_reg_2709 <= icmp_ln1496_99_fu_1718_p2;
        icmp_ln1496_reg_2569 <= icmp_ln1496_fu_1550_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln203_reg_2729 <= icmp_ln203_fu_1742_p2;
        icmp_ln233_reg_2236 <= icmp_ln233_fu_792_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_data_V_3_16 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_32;
        kernel_data_V_3_17 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_33;
        kernel_data_V_3_18 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_34;
        kernel_data_V_3_19 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_35;
        kernel_data_V_3_20 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_36;
        kernel_data_V_3_21 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_37;
        kernel_data_V_3_22 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_38;
        kernel_data_V_3_23 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_39;
        kernel_data_V_3_24 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_40;
        kernel_data_V_3_25 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_41;
        kernel_data_V_3_26 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_42;
        kernel_data_V_3_27 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_43;
        kernel_data_V_3_28 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_44;
        kernel_data_V_3_29 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_45;
        kernel_data_V_3_30 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_46;
        kernel_data_V_3_31 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_47;
        kernel_data_V_3_48 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_48;
        kernel_data_V_3_49 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_49;
        kernel_data_V_3_50 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_50;
        kernel_data_V_3_51 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_51;
        kernel_data_V_3_52 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_52;
        kernel_data_V_3_53 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_53;
        kernel_data_V_3_54 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_54;
        kernel_data_V_3_55 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_55;
        kernel_data_V_3_56 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_56;
        kernel_data_V_3_57 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_57;
        kernel_data_V_3_58 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_58;
        kernel_data_V_3_59 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_59;
        kernel_data_V_3_60 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_60;
        kernel_data_V_3_61 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_61;
        kernel_data_V_3_62 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_62;
        kernel_data_V_3_63 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_63;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_reg_2729 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sY_2 <= ap_phi_reg_pp0_iter2_storemerge_i_i_reg_697;
    end
end

always @ (*) begin
    if ((icmp_ln233_fu_792_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln203_reg_2729 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_sY_2_load = ap_phi_reg_pp0_iter2_storemerge_i_i_reg_697;
    end else begin
        ap_sig_allocacmp_sY_2_load = sY_2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp97) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_ce = 1'b1;
    end else begin
        call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_10_V_blk_n = data_V_data_10_V_empty_n;
    end else begin
        data_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_10_V_read = 1'b1;
    end else begin
        data_V_data_10_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_11_V_blk_n = data_V_data_11_V_empty_n;
    end else begin
        data_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_11_V_read = 1'b1;
    end else begin
        data_V_data_11_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_12_V_blk_n = data_V_data_12_V_empty_n;
    end else begin
        data_V_data_12_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_12_V_read = 1'b1;
    end else begin
        data_V_data_12_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_13_V_blk_n = data_V_data_13_V_empty_n;
    end else begin
        data_V_data_13_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_13_V_read = 1'b1;
    end else begin
        data_V_data_13_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_14_V_blk_n = data_V_data_14_V_empty_n;
    end else begin
        data_V_data_14_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_14_V_read = 1'b1;
    end else begin
        data_V_data_14_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_15_V_blk_n = data_V_data_15_V_empty_n;
    end else begin
        data_V_data_15_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_15_V_read = 1'b1;
    end else begin
        data_V_data_15_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_4_V_blk_n = data_V_data_4_V_empty_n;
    end else begin
        data_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_4_V_read = 1'b1;
    end else begin
        data_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_5_V_blk_n = data_V_data_5_V_empty_n;
    end else begin
        data_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_5_V_read = 1'b1;
    end else begin
        data_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_6_V_blk_n = data_V_data_6_V_empty_n;
    end else begin
        data_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_6_V_read = 1'b1;
    end else begin
        data_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_7_V_blk_n = data_V_data_7_V_empty_n;
    end else begin
        data_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_7_V_read = 1'b1;
    end else begin
        data_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_8_V_blk_n = data_V_data_8_V_empty_n;
    end else begin
        data_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_8_V_read = 1'b1;
    end else begin
        data_V_data_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_2236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_9_V_blk_n = data_V_data_9_V_empty_n;
    end else begin
        data_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_9_V_read = 1'b1;
    end else begin
        data_V_data_9_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_10_V_blk_n = res_V_data_10_V_full_n;
    end else begin
        res_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_10_V_write = 1'b1;
    end else begin
        res_V_data_10_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_11_V_blk_n = res_V_data_11_V_full_n;
    end else begin
        res_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_11_V_write = 1'b1;
    end else begin
        res_V_data_11_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_12_V_blk_n = res_V_data_12_V_full_n;
    end else begin
        res_V_data_12_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_12_V_write = 1'b1;
    end else begin
        res_V_data_12_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_13_V_blk_n = res_V_data_13_V_full_n;
    end else begin
        res_V_data_13_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_13_V_write = 1'b1;
    end else begin
        res_V_data_13_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_14_V_blk_n = res_V_data_14_V_full_n;
    end else begin
        res_V_data_14_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_14_V_write = 1'b1;
    end else begin
        res_V_data_14_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_15_V_blk_n = res_V_data_15_V_full_n;
    end else begin
        res_V_data_15_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_15_V_write = 1'b1;
    end else begin
        res_V_data_15_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n;
    end else begin
        res_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_6_V_write = 1'b1;
    end else begin
        res_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n;
    end else begin
        res_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_7_V_write = 1'b1;
    end else begin
        res_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_8_V_blk_n = res_V_data_8_V_full_n;
    end else begin
        res_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_8_V_write = 1'b1;
    end else begin
        res_V_data_8_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_6_reg_2565) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_9_V_blk_n = res_V_data_9_V_full_n;
    end else begin
        res_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_data_9_V_write = 1'b1;
    end else begin
        res_V_data_9_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln233_fu_792_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln233_fu_792_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln211_fu_1798_p2 = (pY_2 + 32'd1);

assign add_ln213_fu_1810_p2 = (ap_sig_allocacmp_sY_2_load + 32'd1);

assign add_ln216_fu_1748_p2 = (pX_2 + 32'd1);

assign add_ln218_fu_1760_p2 = (sX_2 + 32'd1);

assign add_ln233_fu_798_p2 = (indvar_flatten_reg_686 + 8'd1);

assign and_ln185_5_fu_1538_p2 = (icmp_ln185_9_fu_1526_p2 & icmp_ln185_8_fu_1516_p2);

assign and_ln185_6_fu_1544_p2 = (and_ln185_fu_1532_p2 & and_ln185_5_fu_1538_p2);

assign and_ln185_fu_1532_p2 = (icmp_ln185_fu_1496_p2 & icmp_ln185_7_fu_1506_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((io_acc_block_signal_op323 == 1'b0) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((io_acc_block_signal_op48 == 1'b0) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((io_acc_block_signal_op323 == 1'b0) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((io_acc_block_signal_op48 == 1'b0) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp97 = (((io_acc_block_signal_op323 == 1'b0) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((io_acc_block_signal_op48 == 1'b0) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((io_acc_block_signal_op323 == 1'b0) & (1'd1 == and_ln185_6_reg_2565) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((io_acc_block_signal_op48 == 1'b0) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0_ignore_call54 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((io_acc_block_signal_op48 == 1'b0) & (icmp_ln233_reg_2236 == 1'd0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1_ignore_call54 = ((io_acc_block_signal_op48 == 1'b0) & (icmp_ln233_reg_2236 == 1'd0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((io_acc_block_signal_op323 == 1'b0) & (1'd1 == and_ln185_6_reg_2565));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2_ignore_call54 = ((io_acc_block_signal_op323 == 1'b0) & (1'd1 == and_ln185_6_reg_2565));
end

always @ (*) begin
    ap_condition_497 = ((icmp_ln203_fu_1742_p2 == 1'd1) & (icmp_ln207_fu_1792_p2 == 1'd0) & (icmp_ln233_reg_2236 == 1'd0));
end

always @ (*) begin
    ap_condition_5717 = ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_fu_1742_p2 == 1'd1) & (icmp_ln233_reg_2236 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_648 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_652 = ((icmp_ln207_fu_1792_p2 == 1'd1) & (icmp_ln203_fu_1742_p2 == 1'd1) & (icmp_ln233_reg_2236 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge_i_i_reg_697 = 'bx;

assign ap_ready = internal_ap_ready;

assign call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_start = call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_start_reg;

assign icmp_ln1496_100_fu_1724_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_30) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_62)) ? 1'b1 : 1'b0);

assign icmp_ln1496_101_fu_2190_p2 = (($signed(select_ln86_99_fu_2180_p3) < $signed(select_ln86_100_fu_2185_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_102_fu_1730_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_15) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_47)) ? 1'b1 : 1'b0);

assign icmp_ln1496_103_fu_1736_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_31) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_63)) ? 1'b1 : 1'b0);

assign icmp_ln1496_104_fu_2215_p2 = (($signed(select_ln86_102_fu_2205_p3) < $signed(select_ln86_103_fu_2210_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_58_fu_1556_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_16) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_48)) ? 1'b1 : 1'b0);

assign icmp_ln1496_59_fu_1840_p2 = (($signed(select_ln86_fu_1830_p3) < $signed(select_ln86_58_fu_1835_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_60_fu_1562_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_1) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_33)) ? 1'b1 : 1'b0);

assign icmp_ln1496_61_fu_1568_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_17) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_49)) ? 1'b1 : 1'b0);

assign icmp_ln1496_62_fu_1865_p2 = (($signed(select_ln86_60_fu_1855_p3) < $signed(select_ln86_61_fu_1860_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_63_fu_1574_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_2) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_34)) ? 1'b1 : 1'b0);

assign icmp_ln1496_64_fu_1580_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_18) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_50)) ? 1'b1 : 1'b0);

assign icmp_ln1496_65_fu_1890_p2 = (($signed(select_ln86_63_fu_1880_p3) < $signed(select_ln86_64_fu_1885_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_66_fu_1586_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_3) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_35)) ? 1'b1 : 1'b0);

assign icmp_ln1496_67_fu_1592_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_19) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_51)) ? 1'b1 : 1'b0);

assign icmp_ln1496_68_fu_1915_p2 = (($signed(select_ln86_66_fu_1905_p3) < $signed(select_ln86_67_fu_1910_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_69_fu_1598_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_4) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_36)) ? 1'b1 : 1'b0);

assign icmp_ln1496_70_fu_1604_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_20) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_52)) ? 1'b1 : 1'b0);

assign icmp_ln1496_71_fu_1940_p2 = (($signed(select_ln86_69_fu_1930_p3) < $signed(select_ln86_70_fu_1935_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_72_fu_1610_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_5) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_37)) ? 1'b1 : 1'b0);

assign icmp_ln1496_73_fu_1616_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_21) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_53)) ? 1'b1 : 1'b0);

assign icmp_ln1496_74_fu_1965_p2 = (($signed(select_ln86_72_fu_1955_p3) < $signed(select_ln86_73_fu_1960_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_75_fu_1622_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_6) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_38)) ? 1'b1 : 1'b0);

assign icmp_ln1496_76_fu_1628_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_22) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_54)) ? 1'b1 : 1'b0);

assign icmp_ln1496_77_fu_1990_p2 = (($signed(select_ln86_75_fu_1980_p3) < $signed(select_ln86_76_fu_1985_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_78_fu_1634_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_7) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_39)) ? 1'b1 : 1'b0);

assign icmp_ln1496_79_fu_1640_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_23) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_55)) ? 1'b1 : 1'b0);

assign icmp_ln1496_80_fu_2015_p2 = (($signed(select_ln86_78_fu_2005_p3) < $signed(select_ln86_79_fu_2010_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_81_fu_1646_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_8) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_40)) ? 1'b1 : 1'b0);

assign icmp_ln1496_82_fu_1652_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_24) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_56)) ? 1'b1 : 1'b0);

assign icmp_ln1496_83_fu_2040_p2 = (($signed(select_ln86_81_fu_2030_p3) < $signed(select_ln86_82_fu_2035_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_84_fu_1658_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_9) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_41)) ? 1'b1 : 1'b0);

assign icmp_ln1496_85_fu_1664_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_25) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_57)) ? 1'b1 : 1'b0);

assign icmp_ln1496_86_fu_2065_p2 = (($signed(select_ln86_84_fu_2055_p3) < $signed(select_ln86_85_fu_2060_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_87_fu_1670_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_10) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_42)) ? 1'b1 : 1'b0);

assign icmp_ln1496_88_fu_1676_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_26) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_58)) ? 1'b1 : 1'b0);

assign icmp_ln1496_89_fu_2090_p2 = (($signed(select_ln86_87_fu_2080_p3) < $signed(select_ln86_88_fu_2085_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_90_fu_1682_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_11) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_43)) ? 1'b1 : 1'b0);

assign icmp_ln1496_91_fu_1688_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_27) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_59)) ? 1'b1 : 1'b0);

assign icmp_ln1496_92_fu_2115_p2 = (($signed(select_ln86_90_fu_2105_p3) < $signed(select_ln86_91_fu_2110_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_93_fu_1694_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_12) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_44)) ? 1'b1 : 1'b0);

assign icmp_ln1496_94_fu_1700_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_28) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_60)) ? 1'b1 : 1'b0);

assign icmp_ln1496_95_fu_2140_p2 = (($signed(select_ln86_93_fu_2130_p3) < $signed(select_ln86_94_fu_2135_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_96_fu_1706_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_13) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_45)) ? 1'b1 : 1'b0);

assign icmp_ln1496_97_fu_1712_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_29) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_61)) ? 1'b1 : 1'b0);

assign icmp_ln1496_98_fu_2165_p2 = (($signed(select_ln86_96_fu_2155_p3) < $signed(select_ln86_97_fu_2160_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_99_fu_1718_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_14) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_46)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_1550_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_0) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config11_s_fu_708_ap_return_32)) ? 1'b1 : 1'b0);

assign icmp_ln185_7_fu_1506_p2 = ((ap_sig_allocacmp_sY_2_load == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln185_8_fu_1516_p2 = (($signed(pY_2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln185_9_fu_1526_p2 = (($signed(pX_2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_1496_p2 = ((sX_2 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_1742_p2 = ((pX_2 == 32'd12) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_1792_p2 = ((pY_2 == 32'd12) ? 1'b1 : 1'b0);

assign icmp_ln233_fu_792_p2 = ((indvar_flatten_reg_686 == 8'd169) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op323 = (res_V_data_9_V_full_n & res_V_data_8_V_full_n & res_V_data_7_V_full_n & res_V_data_6_V_full_n & res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_15_V_full_n & res_V_data_14_V_full_n & res_V_data_13_V_full_n & res_V_data_12_V_full_n & res_V_data_11_V_full_n & res_V_data_10_V_full_n & res_V_data_0_V_full_n);

assign io_acc_block_signal_op48 = (data_V_data_9_V_empty_n & data_V_data_8_V_empty_n & data_V_data_7_V_empty_n & data_V_data_6_V_empty_n & data_V_data_5_V_empty_n & data_V_data_4_V_empty_n & data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_15_V_empty_n & data_V_data_14_V_empty_n & data_V_data_13_V_empty_n & data_V_data_12_V_empty_n & data_V_data_11_V_empty_n & data_V_data_10_V_empty_n & data_V_data_0_V_empty_n);

assign res_V_data_0_V_din = ((icmp_ln1496_59_fu_1840_p2[0:0] === 1'b1) ? select_ln86_58_fu_1835_p3 : select_ln86_fu_1830_p3);

assign res_V_data_10_V_din = ((icmp_ln1496_89_fu_2090_p2[0:0] === 1'b1) ? select_ln86_88_fu_2085_p3 : select_ln86_87_fu_2080_p3);

assign res_V_data_11_V_din = ((icmp_ln1496_92_fu_2115_p2[0:0] === 1'b1) ? select_ln86_91_fu_2110_p3 : select_ln86_90_fu_2105_p3);

assign res_V_data_12_V_din = ((icmp_ln1496_95_fu_2140_p2[0:0] === 1'b1) ? select_ln86_94_fu_2135_p3 : select_ln86_93_fu_2130_p3);

assign res_V_data_13_V_din = ((icmp_ln1496_98_fu_2165_p2[0:0] === 1'b1) ? select_ln86_97_fu_2160_p3 : select_ln86_96_fu_2155_p3);

assign res_V_data_14_V_din = ((icmp_ln1496_101_fu_2190_p2[0:0] === 1'b1) ? select_ln86_100_fu_2185_p3 : select_ln86_99_fu_2180_p3);

assign res_V_data_15_V_din = ((icmp_ln1496_104_fu_2215_p2[0:0] === 1'b1) ? select_ln86_103_fu_2210_p3 : select_ln86_102_fu_2205_p3);

assign res_V_data_1_V_din = ((icmp_ln1496_62_fu_1865_p2[0:0] === 1'b1) ? select_ln86_61_fu_1860_p3 : select_ln86_60_fu_1855_p3);

assign res_V_data_2_V_din = ((icmp_ln1496_65_fu_1890_p2[0:0] === 1'b1) ? select_ln86_64_fu_1885_p3 : select_ln86_63_fu_1880_p3);

assign res_V_data_3_V_din = ((icmp_ln1496_68_fu_1915_p2[0:0] === 1'b1) ? select_ln86_67_fu_1910_p3 : select_ln86_66_fu_1905_p3);

assign res_V_data_4_V_din = ((icmp_ln1496_71_fu_1940_p2[0:0] === 1'b1) ? select_ln86_70_fu_1935_p3 : select_ln86_69_fu_1930_p3);

assign res_V_data_5_V_din = ((icmp_ln1496_74_fu_1965_p2[0:0] === 1'b1) ? select_ln86_73_fu_1960_p3 : select_ln86_72_fu_1955_p3);

assign res_V_data_6_V_din = ((icmp_ln1496_77_fu_1990_p2[0:0] === 1'b1) ? select_ln86_76_fu_1985_p3 : select_ln86_75_fu_1980_p3);

assign res_V_data_7_V_din = ((icmp_ln1496_80_fu_2015_p2[0:0] === 1'b1) ? select_ln86_79_fu_2010_p3 : select_ln86_78_fu_2005_p3);

assign res_V_data_8_V_din = ((icmp_ln1496_83_fu_2040_p2[0:0] === 1'b1) ? select_ln86_82_fu_2035_p3 : select_ln86_81_fu_2030_p3);

assign res_V_data_9_V_din = ((icmp_ln1496_86_fu_2065_p2[0:0] === 1'b1) ? select_ln86_85_fu_2060_p3 : select_ln86_84_fu_2055_p3);

assign select_ln213_fu_1816_p3 = ((icmp_ln185_7_fu_1506_p2[0:0] === 1'b1) ? 32'd0 : add_ln213_fu_1810_p2);

assign select_ln218_fu_1766_p3 = ((icmp_ln185_fu_1496_p2[0:0] === 1'b1) ? 32'd0 : add_ln218_fu_1760_p2);

assign select_ln86_100_fu_2185_p3 = ((icmp_ln1496_100_reg_2714[0:0] === 1'b1) ? pool_window_3_V_49_reg_2555 : pool_window_2_V_37_reg_2250);

assign select_ln86_102_fu_2205_p3 = ((icmp_ln1496_102_reg_2719[0:0] === 1'b1) ? pool_window_1_V_50_reg_2480 : pool_window_0_V_51_reg_2325);

assign select_ln86_103_fu_2210_p3 = ((icmp_ln1496_103_reg_2724[0:0] === 1'b1) ? pool_window_3_V_50_reg_2560 : pool_window_2_V_51_reg_2245);

assign select_ln86_58_fu_1835_p3 = ((icmp_ln1496_58_reg_2574[0:0] === 1'b1) ? pool_window_3_V_reg_2485 : pool_window_2_V_reg_2320);

assign select_ln86_60_fu_1855_p3 = ((icmp_ln1496_60_reg_2579[0:0] === 1'b1) ? pool_window_1_V_51_reg_2410 : pool_window_0_V_39_reg_2395);

assign select_ln86_61_fu_1860_p3 = ((icmp_ln1496_61_reg_2584[0:0] === 1'b1) ? pool_window_3_V_51_reg_2490 : pool_window_2_V_39_reg_2315);

assign select_ln86_63_fu_1880_p3 = ((icmp_ln1496_63_reg_2589[0:0] === 1'b1) ? pool_window_1_V_37_reg_2415 : pool_window_0_V_40_reg_2390);

assign select_ln86_64_fu_1885_p3 = ((icmp_ln1496_64_reg_2594[0:0] === 1'b1) ? pool_window_3_V_37_reg_2495 : pool_window_2_V_40_reg_2310);

assign select_ln86_66_fu_1905_p3 = ((icmp_ln1496_66_reg_2599[0:0] === 1'b1) ? pool_window_1_V_38_reg_2420 : pool_window_0_V_41_reg_2385);

assign select_ln86_67_fu_1910_p3 = ((icmp_ln1496_67_reg_2604[0:0] === 1'b1) ? pool_window_3_V_38_reg_2500 : pool_window_2_V_41_reg_2305);

assign select_ln86_69_fu_1930_p3 = ((icmp_ln1496_69_reg_2609[0:0] === 1'b1) ? pool_window_1_V_39_reg_2425 : pool_window_0_V_42_reg_2380);

assign select_ln86_70_fu_1935_p3 = ((icmp_ln1496_70_reg_2614[0:0] === 1'b1) ? pool_window_3_V_39_reg_2505 : pool_window_2_V_42_reg_2300);

assign select_ln86_72_fu_1955_p3 = ((icmp_ln1496_72_reg_2619[0:0] === 1'b1) ? pool_window_1_V_40_reg_2430 : pool_window_0_V_43_reg_2375);

assign select_ln86_73_fu_1960_p3 = ((icmp_ln1496_73_reg_2624[0:0] === 1'b1) ? pool_window_3_V_40_reg_2510 : pool_window_2_V_43_reg_2295);

assign select_ln86_75_fu_1980_p3 = ((icmp_ln1496_75_reg_2629[0:0] === 1'b1) ? pool_window_1_V_41_reg_2435 : pool_window_0_V_44_reg_2370);

assign select_ln86_76_fu_1985_p3 = ((icmp_ln1496_76_reg_2634[0:0] === 1'b1) ? pool_window_3_V_41_reg_2515 : pool_window_2_V_44_reg_2290);

assign select_ln86_78_fu_2005_p3 = ((icmp_ln1496_78_reg_2639[0:0] === 1'b1) ? pool_window_1_V_42_reg_2440 : pool_window_0_V_45_reg_2365);

assign select_ln86_79_fu_2010_p3 = ((icmp_ln1496_79_reg_2644[0:0] === 1'b1) ? pool_window_3_V_42_reg_2520 : pool_window_2_V_45_reg_2285);

assign select_ln86_81_fu_2030_p3 = ((icmp_ln1496_81_reg_2649[0:0] === 1'b1) ? pool_window_1_V_43_reg_2445 : pool_window_0_V_46_reg_2360);

assign select_ln86_82_fu_2035_p3 = ((icmp_ln1496_82_reg_2654[0:0] === 1'b1) ? pool_window_3_V_43_reg_2525 : pool_window_2_V_46_reg_2280);

assign select_ln86_84_fu_2055_p3 = ((icmp_ln1496_84_reg_2659[0:0] === 1'b1) ? pool_window_1_V_44_reg_2450 : pool_window_0_V_47_reg_2355);

assign select_ln86_85_fu_2060_p3 = ((icmp_ln1496_85_reg_2664[0:0] === 1'b1) ? pool_window_3_V_44_reg_2530 : pool_window_2_V_47_reg_2275);

assign select_ln86_87_fu_2080_p3 = ((icmp_ln1496_87_reg_2669[0:0] === 1'b1) ? pool_window_1_V_45_reg_2455 : pool_window_0_V_48_reg_2350);

assign select_ln86_88_fu_2085_p3 = ((icmp_ln1496_88_reg_2674[0:0] === 1'b1) ? pool_window_3_V_45_reg_2535 : pool_window_2_V_48_reg_2270);

assign select_ln86_90_fu_2105_p3 = ((icmp_ln1496_90_reg_2679[0:0] === 1'b1) ? pool_window_1_V_46_reg_2460 : pool_window_0_V_49_reg_2345);

assign select_ln86_91_fu_2110_p3 = ((icmp_ln1496_91_reg_2684[0:0] === 1'b1) ? pool_window_3_V_46_reg_2540 : pool_window_2_V_49_reg_2265);

assign select_ln86_93_fu_2130_p3 = ((icmp_ln1496_93_reg_2689[0:0] === 1'b1) ? pool_window_1_V_47_reg_2465 : pool_window_0_V_50_reg_2340);

assign select_ln86_94_fu_2135_p3 = ((icmp_ln1496_94_reg_2694[0:0] === 1'b1) ? pool_window_3_V_47_reg_2545 : pool_window_2_V_50_reg_2260);

assign select_ln86_96_fu_2155_p3 = ((icmp_ln1496_96_reg_2699[0:0] === 1'b1) ? pool_window_1_V_48_reg_2470 : pool_window_0_V_38_reg_2335);

assign select_ln86_97_fu_2160_p3 = ((icmp_ln1496_97_reg_2704[0:0] === 1'b1) ? pool_window_3_V_48_reg_2550 : pool_window_2_V_38_reg_2255);

assign select_ln86_99_fu_2180_p3 = ((icmp_ln1496_99_reg_2709[0:0] === 1'b1) ? pool_window_1_V_49_reg_2475 : pool_window_0_V_37_reg_2330);

assign select_ln86_fu_1830_p3 = ((icmp_ln1496_reg_2569[0:0] === 1'b1) ? pool_window_1_V_reg_2405 : pool_window_0_V_reg_2400);

assign start_out = real_start;

endmodule //pooling2d_cl_array_array_ap_fixed_16u_config11_s
